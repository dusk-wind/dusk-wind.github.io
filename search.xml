<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>GitHub项目-python</title>
    <url>/2024/10/14/GitHub%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<p>上次的网易云爬虫实践失败了，原理是懂的，但其实网易云的爬取遇到的问题还是没法解决。<br>这不是简简单单下载代码读读跑一下就行的。其实也反映了我python方面的基础知识不足。<br>于是在Github上找到一个项目学习:从零开始学习人工智能,挑战100天学习python<a href="https://github.com/Microstrong0305/Python2AI">链接</a></p>
<p>我决定尝试一下，每天在此记录。</p>
<span id="more"></span>
<h5 id="day1"><a href="#day1" class="headerlink" title="day1"></a>day1</h5><p>简单介绍了下python,交互,库,安装方法。</p>
<h5 id="day2"><a href="#day2" class="headerlink" title="day2"></a>day2</h5><p>介绍了下变量类型,运算符。写几个应用的<br>1.华氏度转摄氏度</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f=float(input(&quot;华氏度:&quot;))</span><br><span class="line">c=(f-32)/1.8</span><br><span class="line">print(&quot;摄氏度:&#123;&#125;&quot;.format(c))</span><br></pre></td></tr></table></figure>
<p>2.计算圆的周长面积</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pi=3.14</span><br><span class="line">r=float(input(&quot;r:&quot;))</span><br><span class="line">print(&quot;length:&#123;&#125;&quot;.format(2*pi*r))</span><br><span class="line">print(&quot;area:&#123;&#125;&quot;.format(pi*r**2))</span><br></pre></td></tr></table></figure>
<h5 id="day3-分支结构-if的用法"><a href="#day3-分支结构-if的用法" class="headerlink" title="day3 分支结构:if的用法"></a>day3 分支结构:if的用法</h5><p><strong>注意缩进</strong><br>if ；elif ；else</p>
<h5 id="day4-循环结构-for的用法，while的用法"><a href="#day4-循环结构-for的用法，while的用法" class="headerlink" title="day4 循环结构:for的用法，while的用法"></a>day4 循环结构:for的用法，while的用法</h5><p><strong>range用法</strong>：<br>range(101)：可以用来产生0到100范围的整数，需要注意的是取不到101。<br>range(1, 101)：可以用来产生1到100范围的整数，相当于前面是闭区间后面是开区间。<br>range(1, 101, 2)：可以用来产生1到100的奇数，其中2是步长，即每次数值递增的值。<br>range(100, 0, -2)：可以用来产生100到1的偶数，其中-2是步长，即每次数字递减的值。</p>
<p>break只能终止它所在的那个循环;continue用来放弃本次循环后续的代码直接让循环进入下一轮。</p>
<h5 id="day5-构造程序逻辑"><a href="#day5-构造程序逻辑" class="headerlink" title="day5 构造程序逻辑"></a>day5 构造程序逻辑</h5><p>写个三个算法，找素数，完美数，斐波那契数列。<br>不知道是不是vscode有问题，前几次明明代码逻辑没错都不出结果。</p>
<h5 id="day6-函数和模块的使用"><a href="#day6-函数和模块的使用" class="headerlink" title="day6 函数和模块的使用"></a>day6 函数和模块的使用</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def fac(num):</span><br><span class="line">    &quot;&quot;&quot;求阶乘&quot;&quot;&quot;</span><br><span class="line">    result = 1</span><br><span class="line">    for n in range(1, num + 1):</span><br><span class="line">        result *= n</span><br><span class="line">    return result</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">函数定义：</span><br><span class="line">def 函数命(参数)：</span><br><span class="line">    ···</span><br><span class="line">    ···</span><br><span class="line">    return ···</span><br></pre></td></tr></table></figure>

<p>python函数无需重载,支持可变参数(变得是参数的数量)。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在参数名前面的*表示args是一个可变参数</span><br><span class="line">def add(*args):</span><br><span class="line">    total = 0</span><br><span class="line">    for val in args:</span><br><span class="line">        total += val</span><br><span class="line">    return total</span><br><span class="line"></span><br><span class="line"> 在调用add函数时可以传入0个或多个参数</span><br><span class="line">print(add())</span><br><span class="line">print(add(1))</span><br><span class="line">print(add(1, 2))</span><br><span class="line">print(add(1, 2, 3))</span><br><span class="line">print(add(1, 3, 5, 7, 9))</span><br></pre></td></tr></table></figure>
<p>可以用模块管理函数,模块就是一个python文件</p>
<p>在vscode上实践了一下。</p>
<p>原理就是,一个python文件是一个模块,里面有定义的函数,</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">引用方法： from 模块名 import 函数名</span><br></pre></td></tr></table></figure>

<p>函数可以嵌套，全局变量:global<br>Python查找一个变量时会按照“局部作用域”、“嵌套作用域”、“全局作用域”和“内置作用域”的顺序进行搜索,前三者我们在上面的代码中已经看到了,<br>所谓的“内置作用域”就是Python内置的那些标识,我们之前用过的input、print、int等都属于内置作用域。</p>
<h5 id="day7-字符串和常用数据结构"><a href="#day7-字符串和常用数据结构" class="headerlink" title="day7 字符串和常用数据结构"></a>day7 字符串和常用数据结构</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">s1 = &#x27;hello, world!&#x27;</span><br><span class="line">s2 = &quot;hello, world!&quot;</span><br><span class="line">以三个双引号或单引号开头的字符串可以折行</span><br><span class="line">s3 = &quot;&quot;&quot;</span><br><span class="line">hello, </span><br><span class="line">world!</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">print(s1, s2, s3, end=&#x27;&#x27;)</span><br></pre></td></tr></table></figure>

<p>\ 后面:二进制,八进制,十六进制<br>\n 换行 ; \t 制符<br>可以使用*运算符来重复一个字符串的内容,可以使用in和not in来判断一个字符串是否包含另外一个字符串(成员运算),<br>我们也可以用[]和[:]运算符从字符串取出某个字符或某些字符(切片运算),代码如下所示。</p>
<p>常用输出字符串：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">print(&quot;&#123;&#125;&quot;.format(a))</span><br><span class="line">s1 = &#x27;hello &#x27; * 3</span><br><span class="line">print(s1) # hello hello hello </span><br><span class="line">s2 = &#x27;world&#x27;</span><br><span class="line">s1 += s2</span><br><span class="line">print(s1) # hello hello hello world</span><br><span class="line">print(&#x27;ll&#x27; in s1) # True</span><br><span class="line">print(&#x27;good&#x27; in s1) # False</span><br><span class="line">str2 = &#x27;abc123456&#x27;</span><br><span class="line"># 从字符串中取出指定位置的字符(下标运算)</span><br><span class="line">print(str2[2]) # c</span><br><span class="line"># 字符串切片(从指定的开始索引到指定的结束索引)</span><br><span class="line">print(str2[2:5]) # c12</span><br><span class="line">print(str2[2:]) # c123456</span><br><span class="line">print(str2[2::2]) # c246</span><br><span class="line">print(str2[::2]) # ac246</span><br><span class="line">print(str2[::-1]) # 654321cba</span><br><span class="line">print(str2[-3:-1]) # 45</span><br></pre></td></tr></table></figure>
<p>切片的操作是左闭右开<br>字符串处理：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">str1 = &#x27;hello, world!&#x27;</span><br><span class="line"># 通过内置函数len计算字符串的长度</span><br><span class="line">print(len(str1)) # 13</span><br><span class="line"># 获得字符串首字母大写的拷贝</span><br><span class="line">print(str1.capitalize()) # Hello, world!</span><br><span class="line"># 获得字符串每个单词首字母大写的拷贝</span><br><span class="line">print(str1.title()) # Hello, World!</span><br><span class="line"># 获得字符串变大写后的拷贝</span><br><span class="line">print(str1.upper()) # HELLO, WORLD!</span><br><span class="line"># 从字符串中查找子串所在位置</span><br><span class="line">print(str1.find(&#x27;or&#x27;)) # 8</span><br><span class="line">print(str1.find(&#x27;shit&#x27;)) # -1</span><br><span class="line"># 与find类似但找不到子串时会引发异常</span><br><span class="line"># print(str1.index(&#x27;or&#x27;))</span><br><span class="line"># print(str1.index(&#x27;shit&#x27;))</span><br><span class="line"># 检查字符串是否以指定的字符串开头</span><br><span class="line">print(str1.startswith(&#x27;He&#x27;)) # False</span><br><span class="line">print(str1.startswith(&#x27;hel&#x27;)) # True</span><br><span class="line"># 检查字符串是否以指定的字符串结尾</span><br><span class="line">print(str1.endswith(&#x27;!&#x27;)) # True</span><br><span class="line"># 将字符串以指定的宽度居中并在两侧填充指定的字符</span><br><span class="line">print(str1.center(50, &#x27;*&#x27;))</span><br><span class="line"># 将字符串以指定的宽度靠右放置左侧填充指定的字符</span><br><span class="line">print(str1.rjust(50, &#x27; &#x27;))</span><br><span class="line">str2 = &#x27;abc123456&#x27;</span><br><span class="line"># 检查字符串是否由数字构成</span><br><span class="line">print(str2.isdigit())  # False</span><br><span class="line"># 检查字符串是否以字母构成</span><br><span class="line">print(str2.isalpha())  # False</span><br><span class="line"># 检查字符串是否以数字和字母构成</span><br><span class="line">print(str2.isalnum())  # True</span><br><span class="line">str3 = &#x27;  jackfrued@126.com &#x27;</span><br><span class="line">print(str3)</span><br><span class="line"># 获得字符串修剪左右两侧空格之后的拷贝</span><br><span class="line">print(str3.strip())</span><br></pre></td></tr></table></figure>

<p><strong>好困啊，看一集生活大爆炸就睡觉吧，明天起来跑完步继续吧 o(￣▽￣)ｄ</strong></p>
<p>列表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">list1 = [1, 3, 5, 7, 100]</span><br><span class="line">print(list1) # [1, 3, 5, 7, 100]</span><br><span class="line"># 乘号表示列表元素的重复</span><br><span class="line">list2 = [&#x27;hello&#x27;] * 3</span><br><span class="line">print(list2) # [&#x27;hello&#x27;, &#x27;hello&#x27;, &#x27;hello&#x27;]</span><br><span class="line"># 计算列表长度(元素个数)</span><br><span class="line">print(len(list1)) # 5</span><br><span class="line"># 下标(索引)运算</span><br><span class="line">print(list1[0]) # 1</span><br><span class="line">print(list1[4]) # 100</span><br><span class="line"># print(list1[5])  # IndexError: list index out of range</span><br><span class="line">print(list1[-1]) # 100</span><br><span class="line">print(list1[-3]) # 5</span><br><span class="line">list1[2] = 300</span><br><span class="line">print(list1) # [1, 3, 300, 7, 100]</span><br><span class="line"># 通过循环用下标遍历列表元素</span><br><span class="line">for index in range(len(list1)):</span><br><span class="line">    print(list1[index])</span><br><span class="line"># 通过for循环遍历列表元素</span><br><span class="line">for elem in list1:</span><br><span class="line">    print(elem)</span><br><span class="line"># 通过enumerate函数处理列表之后再遍历可以同时获得元素索引和值</span><br><span class="line">for index, elem in enumerate(list1):</span><br><span class="line">    print(index, elem)</span><br></pre></td></tr></table></figure>
<p>列表操作：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">list1 = [1, 3, 5, 7, 100]</span><br><span class="line"># 添加元素</span><br><span class="line">list1.append(200)</span><br><span class="line">list1.insert(1, 400)</span><br><span class="line"># 合并两个列表</span><br><span class="line"># list1.extend([1000, 2000])</span><br><span class="line">list1 += [1000, 2000]</span><br><span class="line">print(list1) # [1, 400, 3, 5, 7, 100, 200, 1000, 2000]</span><br><span class="line">print(len(list1)) # 9</span><br><span class="line"># 先通过成员运算判断元素是否在列表中，如果存在就删除该元素</span><br><span class="line">if 3 in list1:</span><br><span class="line">	list1.remove(3)</span><br><span class="line">if 1234 in list1:</span><br><span class="line">    list1.remove(1234)</span><br><span class="line">print(list1) # [1, 400, 5, 7, 100, 200, 1000, 2000]</span><br><span class="line"># 从指定的位置删除元素</span><br><span class="line">list1.pop(0)</span><br><span class="line">list1.pop(len(list1) - 1)</span><br><span class="line">print(list1) # [400, 5, 7, 100, 200, 1000]</span><br><span class="line"># 清空列表元素</span><br><span class="line">list1.clear()</span><br><span class="line">print(list1) # []</span><br></pre></td></tr></table></figure>
<p>列表切片：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fruits = [&#x27;grape&#x27;, &#x27;apple&#x27;, &#x27;strawberry&#x27;, &#x27;waxberry&#x27;]</span><br><span class="line">fruits += [&#x27;pitaya&#x27;, &#x27;pear&#x27;, &#x27;mango&#x27;]</span><br><span class="line"># 列表切片</span><br><span class="line">fruits2 = fruits[1:4]</span><br><span class="line">print(fruits2) # apple strawberry waxberry</span><br><span class="line"># 可以通过完整切片操作来复制列表</span><br><span class="line">fruits3 = fruits[:]</span><br><span class="line">print(fruits3) # [&#x27;grape&#x27;, &#x27;apple&#x27;, &#x27;strawberry&#x27;, &#x27;waxberry&#x27;, &#x27;pitaya&#x27;, &#x27;pear&#x27;, &#x27;mango&#x27;]</span><br><span class="line">fruits4 = fruits[-3:-1]</span><br><span class="line">print(fruits4) # [&#x27;pitaya&#x27;, &#x27;pear&#x27;]</span><br><span class="line"># 可以通过反向切片操作来获得倒转后的列表的拷贝</span><br><span class="line">fruits5 = fruits[::-1]</span><br><span class="line">print(fruits5) # [&#x27;mango&#x27;, &#x27;pear&#x27;, &#x27;pitaya&#x27;, &#x27;waxberry&#x27;, &#x27;strawberry&#x27;, &#x27;apple&#x27;, &#x27;grape&#x27;]</span><br></pre></td></tr></table></figure>
<p>列表排序：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">list1 = [&#x27;orange&#x27;, &#x27;apple&#x27;, &#x27;zoo&#x27;, &#x27;internationalization&#x27;, &#x27;blueberry&#x27;]</span><br><span class="line">list2 = sorted(list1)</span><br><span class="line"># sorted函数返回列表排序后的拷贝不会修改传入的列表</span><br><span class="line"># 函数的设计就应该像sorted函数一样尽可能不产生副作用</span><br><span class="line">list3 = sorted(list1, reverse=True)</span><br><span class="line"># 通过key关键字参数指定根据字符串长度进行排序而不是默认的字母表顺序</span><br><span class="line">list4 = sorted(list1, key=len)</span><br><span class="line">print(list1)</span><br><span class="line">print(list2)</span><br><span class="line">print(list3)</span><br><span class="line">print(list4)</span><br><span class="line"># 给列表对象发出排序消息直接在列表对象上进行排序</span><br><span class="line">list1.sort(reverse=True)</span><br><span class="line">print(list1)</span><br></pre></td></tr></table></figure>
<p>生成式和生成器。。。</p>
<p>元组:元素不能修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 定义元组</span><br><span class="line">t = (&#x27;骆昊&#x27;, 38, True, &#x27;四川成都&#x27;)</span><br><span class="line">print(t)</span><br><span class="line"># 获取元组中的元素</span><br><span class="line">print(t[0])</span><br><span class="line">print(t[3])</span><br><span class="line"># 遍历元组中的值</span><br><span class="line">for member in t:</span><br><span class="line">    print(member)</span><br><span class="line"># 重新给元组赋值</span><br><span class="line"># t[0] = &#x27;王大锤&#x27;  # TypeError</span><br><span class="line"># 变量t重新引用了新的元组原来的元组将被垃圾回收</span><br><span class="line">t = (&#x27;王大锤&#x27;, 20, True, &#x27;云南昆明&#x27;)</span><br><span class="line">print(t)</span><br><span class="line"># 将元组转换成列表</span><br><span class="line">person = list(t)</span><br><span class="line">print(person)</span><br><span class="line"># 列表是可以修改它的元素的</span><br><span class="line">person[0] = &#x27;李小龙&#x27;</span><br><span class="line">person[1] = 25</span><br><span class="line">print(person)</span><br><span class="line"># 将列表转换成元组</span><br><span class="line">fruits_list = [&#x27;apple&#x27;, &#x27;banana&#x27;, &#x27;orange&#x27;]</span><br><span class="line">fruits_tuple = tuple(fruits_list)</span><br><span class="line">print(fruits_tuple)</span><br></pre></td></tr></table></figure>
<p>集合:Python中的集合跟数学上的集合是一致的，不允许有重复元素，而且可以进行交集、并集、差集等运算。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 创建集合的字面量语法</span><br><span class="line">set1 = &#123;1, 2, 3, 3, 3, 2&#125;</span><br><span class="line">print(set1)</span><br><span class="line">print(&#x27;Length =&#x27;, len(set1))</span><br><span class="line"># 创建集合的构造器语法(面向对象部分会进行详细讲解)</span><br><span class="line">set2 = set(range(1, 10))</span><br><span class="line">set3 = set((1, 2, 3, 3, 2, 1))</span><br><span class="line">print(set2, set3)</span><br><span class="line"># 创建集合的推导式语法(推导式也可以用于推导集合)</span><br><span class="line">set4 = &#123;num for num in range(1, 100) if num % 3 == 0 or num % 5 == 0&#125;</span><br><span class="line">print(set4)</span><br><span class="line">向集合添加元素和从集合删除元素。</span><br><span class="line">set1.add(4)</span><br><span class="line">set1.add(5)</span><br><span class="line">set2.update([11, 12])</span><br><span class="line">set2.discard(5)</span><br><span class="line">if 4 in set2:</span><br><span class="line">    set2.remove(4)</span><br><span class="line">print(set1, set2)</span><br><span class="line">print(set3.pop())</span><br><span class="line">print(set3)</span><br><span class="line"># 集合的交集、并集、差集、对称差运算</span><br><span class="line">print(set1 &amp; set2)</span><br><span class="line"># print(set1.intersection(set2))</span><br><span class="line">print(set1 | set2)</span><br><span class="line"># print(set1.union(set2))</span><br><span class="line">print(set1 - set2)</span><br><span class="line"># print(set1.difference(set2))</span><br><span class="line">print(set1 ^ set2)</span><br><span class="line"># print(set1.symmetric_difference(set2))</span><br><span class="line"># 判断子集和超集</span><br><span class="line">print(set2 &lt;= set1)</span><br><span class="line"># print(set2.issubset(set1))</span><br><span class="line">print(set3 &lt;= set1)</span><br><span class="line"># print(set3.issubset(set1))</span><br><span class="line">print(set1 &gt;= set2)</span><br><span class="line"># print(set1.issuperset(set2))</span><br><span class="line">print(set1 &gt;= set3)</span><br><span class="line"># print(set1.issuperset(set3))</span><br></pre></td></tr></table></figure>

<p>字典:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 创建字典的字面量语法</span><br><span class="line">scores = &#123;&#x27;骆昊&#x27;: 95, &#x27;白元芳&#x27;: 78, &#x27;狄仁杰&#x27;: 82&#125;</span><br><span class="line">print(scores)</span><br><span class="line"># 创建字典的构造器语法</span><br><span class="line">items1 = dict(one=1, two=2, three=3, four=4)</span><br><span class="line"># 通过zip函数将两个序列压成字典</span><br><span class="line">items2 = dict(zip([&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;], &#x27;123&#x27;))</span><br><span class="line"># 创建字典的推导式语法</span><br><span class="line">items3 = &#123;num: num ** 2 for num in range(1, 10)&#125;</span><br><span class="line">print(items1, items2, items3)</span><br><span class="line"># 通过键可以获取字典中对应的值</span><br><span class="line">print(scores[&#x27;骆昊&#x27;])</span><br><span class="line">print(scores[&#x27;狄仁杰&#x27;])</span><br><span class="line"># 对字典中所有键值对进行遍历</span><br><span class="line">for key in scores:</span><br><span class="line">    print(f&#x27;&#123;key&#125;: &#123;scores[key]&#125;&#x27;)</span><br><span class="line"># 更新字典中的元素</span><br><span class="line">scores[&#x27;白元芳&#x27;] = 65</span><br><span class="line">scores[&#x27;诸葛王朗&#x27;] = 71</span><br><span class="line">scores.update(冷面=67, 方启鹤=85)</span><br><span class="line">print(scores)</span><br><span class="line">if &#x27;武则天&#x27; in scores:</span><br><span class="line">    print(scores[&#x27;武则天&#x27;])</span><br><span class="line">print(scores.get(&#x27;武则天&#x27;))</span><br><span class="line"># get方法也是通过键获取对应的值但是可以设置默认值</span><br><span class="line">print(scores.get(&#x27;武则天&#x27;, 60))</span><br><span class="line"># 删除字典中的元素</span><br><span class="line">print(scores.popitem())</span><br><span class="line">print(scores.popitem())</span><br><span class="line">print(scores.pop(&#x27;骆昊&#x27;, 100))</span><br><span class="line"># 清空字典</span><br><span class="line">scores.clear()</span><br><span class="line">print(scores)</span><br></pre></td></tr></table></figure>
<p>看着感觉挺简单,实际做慕课作业时真写不出来</p>
<h5 id="day8-面向对象编程"><a href="#day8-面向对象编程" class="headerlink" title="day8 面向对象编程"></a>day8 面向对象编程</h5><p>用class关键字定义</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class Student(object):</span><br><span class="line"></span><br><span class="line">    # __init__是一个特殊方法用于在创建对象时进行初始化操作</span><br><span class="line">    # 通过这个方法我们可以为学生对象绑定name和age两个属性</span><br><span class="line">    def __init__(self, name, age):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    def study(self, course_name):</span><br><span class="line">        print(&#x27;%s正在学习%s.&#x27; % (self.name, course_name))</span><br></pre></td></tr></table></figure>
<p>对于上述对象,我们可以描述其行为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def def():</span><br><span class="line">    创建对象</span><br><span class="line">    stu1=Student(&#x27;艾伦&#x27;,18)</span><br><span class="line">    stu1.study(&#x27;高等数学&#x27;)</span><br><span class="line">if __name__=&quot;__main__&quot;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<h5 id="day9-面向对象进阶"><a href="#day9-面向对象进阶" class="headerlink" title="day9 面向对象进阶"></a>day9 面向对象进阶</h5><p>面向对象有三大属性：继承，封装，多态</p>
<p>python通过属性的访问器和修改器来实现封装性</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class Person(object):</span><br><span class="line"></span><br><span class="line">    def __init__(self, name, age):</span><br><span class="line">        self._name = name</span><br><span class="line">        self._age = age</span><br><span class="line"></span><br><span class="line">    # 访问器 - getter方法</span><br><span class="line">    @property</span><br><span class="line">    def name(self):</span><br><span class="line">        return self._name</span><br><span class="line"></span><br><span class="line">    # 访问器 - getter方法</span><br><span class="line">    @property</span><br><span class="line">    def age(self):</span><br><span class="line">        return self._age</span><br><span class="line"></span><br><span class="line">    # 修改器 - setter方法</span><br><span class="line">    @age.setter</span><br><span class="line">    def age(self, age):</span><br><span class="line">        self._age = age</span><br><span class="line"></span><br><span class="line">    def play(self):</span><br><span class="line">        if self._age &lt;= 16:</span><br><span class="line">            print(&#x27;%s正在玩飞行棋.&#x27; % self._name)</span><br><span class="line">        else:</span><br><span class="line">            print(&#x27;%s正在玩斗地主.&#x27; % self._name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    person = Person(&#x27;王大锤&#x27;, 12)</span><br><span class="line">    person.play()</span><br><span class="line">    person.age = 22</span><br><span class="line">    person.play()</span><br><span class="line">    # person.name = &#x27;白元芳&#x27;  # AttributeError: can&#x27;t set attribute</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p>这边不太想学了,以后要用再来看吧,直接过<br>等我先把形策和英语作文写了，晚上再看一节</p>
<h5 id="day10-图形用户界面和游戏开发"><a href="#day10-图形用户界面和游戏开发" class="headerlink" title="day10 图形用户界面和游戏开发"></a>day10 图形用户界面和游戏开发</h5><p>简单讲了下面向对象编程的应用，做了个大球吃小球的游戏，不太会，感兴趣可以看看pygame官网</p>
<h5 id="day11-文件和异常"><a href="#day11-文件和异常" class="headerlink" title="day11 文件和异常"></a>day11 文件和异常</h5><table>
<thead>
<tr>
<th align="left">操作模式</th>
<th align="left">具体含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">‘r’</td>
<td align="left">读取 （默认）</td>
</tr>
<tr>
<td align="left">‘w’</td>
<td align="left">写入（会先截断之前的内容）</td>
</tr>
<tr>
<td align="left">‘x’</td>
<td align="left">写入，如果文件已经存在会产生异常</td>
</tr>
<tr>
<td align="left">‘a’</td>
<td align="left">追加，将内容写入到已有文件的末尾</td>
</tr>
<tr>
<td align="left">‘b’</td>
<td align="left">二进制模式</td>
</tr>
<tr>
<td align="left">‘t’</td>
<td align="left">文本模式（默认）</td>
</tr>
<tr>
<td align="left">‘+’</td>
<td align="left">更新（既可以读又可以写）</td>
</tr>
</tbody></table>
<p>读取，写入文本文件，二进制文件，</p>
<p>json文件不看</p>
<h5 id="day12-字符串和正则表达式"><a href="#day12-字符串和正则表达式" class="headerlink" title="day12 字符串和正则表达式"></a>day12 字符串和正则表达式</h5><p>正则表达式就是用于描述这些规则的工具，换句话说正则表达式是一种工具，它定义了字符串的匹配模式（如何检查一个字符串是否有跟某种模式匹配的部分或者从一个字符串中将与模式匹配的部分提取出来或者替换掉）。</p>
<h5 id="day13-进程和线程"><a href="#day13-进程和线程" class="headerlink" title="day13 进程和线程"></a>day13 进程和线程</h5><h5 id="day14-网络编程入门和网络应用开发"><a href="#day14-网络编程入门和网络应用开发" class="headerlink" title="day14 网络编程入门和网络应用开发"></a>day14 网络编程入门和网络应用开发</h5><h5 id="day15-图像和办公文档处理"><a href="#day15-图像和办公文档处理" class="headerlink" title="day15 图像和办公文档处理"></a>day15 图像和办公文档处理</h5><h5 id="day16-20-语言进阶"><a href="#day16-20-语言进阶" class="headerlink" title="day16-20 语言进阶"></a>day16-20 语言进阶</h5><p>以上均是python的一些基础知识和进阶用法。</p>
<h5 id="21-30-web前端概述"><a href="#21-30-web前端概述" class="headerlink" title="21-30 web前端概述"></a>21-30 web前端概述</h5><p>学过一些，只熟悉html和css部分</p>
]]></content>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Mincraft启动器及mod安装</title>
    <url>/2024/08/03/Mincraft%E5%90%AF%E5%8A%A8%E5%99%A8%E5%8F%8Amod%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p>关于我的世界启动器有很多。我记得我小时候玩的最欢乐的一段时间必备我的世界三件套：我的世界盒子，我的世界联机平台，我的世界游戏本体。<br>后来随着越来越多的人意识到版权的重要性，加之网易代理国内版的我的世界，这些都没了。</p>
<span id="more"></span>
<h4 id="Minecraft启动器"><a href="#Minecraft启动器" class="headerlink" title="Minecraft启动器"></a>Minecraft启动器</h4><p>Minecraft启动器是一个用于启动和管理Minecraft游戏的应用程序。以下是几种常见的Minecraft启动器：</p>
<ul>
<li>官方启动器（Official Launcher）：官方启动器由Mojang Studios提供，可从Minecraft官方网站下载。它支持Java版Minecraft，并提供登录、版本管理和模组支持等功能。</li>
<li>Minecraft启动器（Minecraft Launcher）：这是基岩版Minecraft的官方启动器，可从各平台的应用商店（如Windows Store、App Store和Google Play）下载。它允许玩家登录并启动基岩版Minecraft，也可以管理下载的内容和游戏设置。</li>
<li>第三方启动器：除了官方启动器外，还有一些第三方启动器可供选择，如HMCL、PCL2等。这些启动器提供了额外的功能和自定义选项，例如模组管理和不同版本的支持。<br>(<del>以上这些来自网络介绍</del>)<br>下面是我个人的体验：</li>
</ul>
<ol>
<li><p>网易版：有硬性远程联机需求的话只能玩这个了。  我的评价是把国内我的世界弄得乌烟瘴气的。</p>
</li>
<li><p>PCL2启动器：这是我非常推荐的。<br>介绍：PCL2 是 Plain Craft Launcher 2 的简称，是由 龙腾猫跃 开发的一款我的世界启动器。</p>
</li>
</ol>
<ul>
<li>优点：很方便，它集成了众多游戏版本、Mod、整合包的相关内容。</li>
<li>缺点：没法远程连接(具体开服务器我也不会&lt;(。_。)&gt;)。只能实现局域网连接，但我在宿舍里试过，像校园网那种大型局域网也不是很稳定。开个人热点也一样。<br>  一般只适合同学或朋友家里连同一个路由器才比较稳定。</li>
</ul>
<p>这是下载链接：<a href="https://mod.3dmgame.com/mod/194985">PCL2启动器下载</a><br>爱发电没了，这是3DM官网下载的，可放心食用。</p>
<p>以下是一些介绍：</p>
<p>运行界面：</p>
<p style="text-align: center;">
    <img src="\images\pcl2启动.png" alt="pcl2">
</p>

<ul>
<li><p>下载方面：</p>
<ul>
<li>光影插件：OptiFine OptiFine又名高清修复，它可以安装光影，使用高清材质，并且大幅提高游戏性能(古董机建议别下)</li>
<li>mod插件：常用的有两种：Forge和Fabric ，他们是mod加载器，下载mod前记得看下对应的mod插件</li>
</ul>
</li>
<li><p>设置方面：建议隔离所有版本<br>原因：在PCL2启动器装MC游戏的时候，往往都有不同的版本来切换运行，但是这里有个问题就是一些游戏MOD不想跟别的版本通用，因为很容易导致MOD冲突，游戏崩溃。</p>
</li>
</ul>
<p>补充：我一般都玩的离线版，正式版没买也没登过，第三方服务器登录页不了解。</p>
<hr>
<ol start="3">
<li>HMCL启动器：以前玩过，感觉不如pcl2</li>
</ol>
<p>这是下载链接：<a href="https://ci.huangyuhui.net/job/HMCL-stable/">HMCL启动器下载</a></p>
<p>注：改启动器需要安装JAVA才可使用,自己可以根据自己的电脑操作位数下载相应的版本  <a href="https://www.java.com/zh-CN/">JAVA官网</a></p>
]]></content>
      <tags>
        <tag>Mincraft</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo指令以及markdown使用方法</title>
    <url>/2024/08/01/hexo%E6%8C%87%E4%BB%A4%E4%BB%A5%E5%8F%8Amarkdown%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="hexo常用指令"><a href="#hexo常用指令" class="headerlink" title="hexo常用指令"></a>hexo常用指令</h2><h3 id="维护运行网站时忘记了可以看看"><a href="#维护运行网站时忘记了可以看看" class="headerlink" title="维护运行网站时忘记了可以看看"></a>维护运行网站时忘记了可以看看</h3><span id="more"></span>
<p>hexo g&#x2F;hexo generate:在hexo站点根目录下生成public文件<br>hexo clean:将生成的public文件删除<br>hexo s&#x2F;hexo server:启动hexo服务，生成网站的默认地址为：<a href="http://localhost:4000/">http://localhost:4000/</a><br>hexo d&#x2F;hexo deploy: 部署站点，在本地生成.deploy_git文件夹并将编译后的文件上传至Github<br>hexo n &lt;文章标题&gt;：在D:&#x2F;blog&#x2F;source&#x2F;_posts里生成一篇markdown文章<br>hexo n page tags:生成标签页<br>hexo n page categories：生成分类页</p>
<h2 id="markdown基本用法"><a href="#markdown基本用法" class="headerlink" title="markdown基本用法"></a>markdown基本用法</h2><h3 id="1-标题大小"><a href="#1-标题大小" class="headerlink" title="1.标题大小"></a>1.标题大小</h3><p>用#标记，随#的个数递增，一级标题最大，六级标题最小<br>#:一级标题<br>##:二级标题<br>###:三级标题<br>效果展示:</p>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h3 id="2-字体样式"><a href="#2-字体样式" class="headerlink" title="2.字体样式"></a>2.字体样式</h3><p>可用星号或下划线，由个数决定：单：斜体 双：粗体 三：粗斜体<br>接下来用*做示范</p>
<html> *这是斜体*</html>

<p><em>这是斜体</em></p>
<html> **这是粗体**</html>

<p><strong>这是粗体</strong></p>
<html> ***这是粗斜体***</html>

<p><em><strong>这是粗斜体</strong></em></p>
<h3 id="3-格式命令"><a href="#3-格式命令" class="headerlink" title="3.格式命令"></a>3.格式命令</h3><p>&lt;br&#x2F;&gt;:换行<br>“&gt;“:引用  </p>
<blockquote>
<p>这是一个引用</p>
</blockquote>
<p>插入链接:<a href="%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80">链接名称</a><br>例：<a href="https://www.njupt.edu.cn/">NJUPT官网</a></p>
<p>插入图片：<br><img src="/%E5%9B%BE%E7%89%87%E5%9C%B0%E5%9D%80" alt="图片描述(选填)"></p>
<h2 id="分割线：-或"><a href="#分割线：-或" class="headerlink" title="分割线：*** 或- - -"></a>分割线：*** 或- - -</h2><p>删除线：在要删除的文字前后加上两个~~<br><del>这是被删除的文字</del></p>
<p>\ 可以显示符号本身</p>
<h3 id="4-列表与表格"><a href="#4-列表与表格" class="headerlink" title="4.列表与表格"></a>4.列表与表格</h3><p>无序列表：使用* + -,再加一个空格作为列表的标记</p>
<ul>
<li>无序列表</li>
</ul>
<p>有序列表：使用数字加上.，再加上一个空格作为标记</p>
<ol>
<li>有序列表</li>
<li>有序列表</li>
</ol>
<p>控制层级：在想控制的列表的列表符号前使用Tab键</p>
<ol>
<li>一级层级<ol start="2">
<li>二级层级<ol start="3">
<li>三级层级</li>
</ol>
</li>
</ol>
</li>
</ol>
<p>表格使用|来分割单元格，使用-来分割表头和其他行<br>:-  表示将表格及单元格内容左对齐<br>-： 表示将表格及单元格内容右对齐<br>:-: 表示将表格及单元格内容居中</p>
<p>星露谷种子售价及收益</p>
<table>
<thead>
<tr>
<th align="left">作物</th>
<th align="left">种子价($)</th>
<th align="left">生长时间(天)</th>
<th align="left">普通品质售价($)</th>
</tr>
</thead>
<tbody><tr>
<td align="left">土豆</td>
<td align="left">50</td>
<td align="left">6</td>
<td align="left">80</td>
</tr>
<tr>
<td align="left">郁金香</td>
<td align="left">20</td>
<td align="left">6</td>
<td align="left">30</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>hexo框架博客搭建/markdown使用</tag>
      </tags>
  </entry>
  <entry>
    <title>Stellaris</title>
    <url>/2024/10/12/Stellaris/</url>
    <content><![CDATA[<p>群星CG推荐:<br><a href="https://www.bilibili.com/video/BV1kw41137q5vd_source=983f970d330f9c31e222ccfb03364c2e">群星Stellaris:“在正义里有回答不了的问题”</a></p>
]]></content>
  </entry>
  <entry>
    <title>next主题美化</title>
    <url>/2024/08/03/next%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/</url>
    <content><![CDATA[<p>以下是本人对于next主题美化和魔改的一些经验</p>
<span id="more"></span>
<ol>
<li><h3 id="音乐播放器的添加"><a href="#音乐播放器的添加" class="headerlink" title="音乐播放器的添加"></a>音乐播放器的添加</h3> 1.1我的音乐播放器是使用的是网易云音乐自动生成的外链插件。<br>打开网易云音乐，将喜欢的歌加入创建的歌单中，然后点击生成外链。</li>
</ol>
<p style="text-align: center;">
    <img src="\images\网易云外链.png" alt="网易云外链">
</p>

<pre><code>1.2选择合适的插件和尺寸，并复制HTML代码。
  我的博客网站是基于hexo框架搭建的，所以ifram插件可以使用。
</code></pre>
<p style="text-align: center;">
    <img src="\images\外链插件复制.png" alt="网易云外链">
</p>
    1.3代码插入与修改
    打开/themes/next/layout/_macro/sidebar.njk文件,在下面的位置插入刚才复制的HTML代码

<p style="text-align: center;">
    <img src="\images\外链代码插入.png" alt="网易云外链">
</p>
    在next主题的_config.yml文件中写下以下代码

<pre><code> music:
      enable: true
      autoplay: true #自动播放
    
**至此，音乐播放器功能就可以使用了，下面是一些优化**

1.4音乐播放器刷新网页间断问题的解决

问题: 音乐播放器在博客刷新页面时会重新播放。  解决方法：引入pjax插件
打开cmd控制台，转到next主题的根目录：cd blog/themes/next ,安装pjax模块
安装代码：git clone https://github.com/theme-next/theme-next-pjax source/lib/pjax
接着在next主题的_config.yml文件中启用pjax模块，就解决了。

 1.5音乐播放器的位置调整(此优化需要打开主题的自定义调整，此处不再叙述)
 由于&lt;iframe&gt;标签本身是一个独立的文档嵌入，无法在其内部修改属性。
 但我们可以通过修改&lt;iframe&gt;的外部容器(比如一个&lt;div&gt;元素)的css样式实现
 首先给&lt;div&gt;元素添加一个类名，修改之前插入到外链代码为：
 
 然后打开 blog/source/_data/styles.styl 写如下代码：
 .music-player-container
 &#123;
    margin-top: 20px;
 &#125;
 此代码中 margin-top: 20px;就修改了音乐播放器距离顶部的位置
 其他属性根据读者的需要自行修改，此处不再赘述。
</code></pre>
]]></content>
      <tags>
        <tag>next主题美化</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode安装python的第三方库</title>
    <url>/2024/09/24/vscode%E5%AE%89%E8%A3%85python%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/</url>
    <content><![CDATA[<p>cmd安装pip:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -m ensurepip --default-pip</span><br></pre></td></tr></table></figure>
<p>vscode控制台安装库:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install 库名</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>二级c</title>
    <url>/2024/09/05/%E4%BA%8C%E7%BA%A7c/</url>
    <content><![CDATA[<h6 id="2024-3"><a href="#2024-3" class="headerlink" title="2024.3"></a><strong>2024.3</strong></h6><p>1.矩阵是线性结构，数组是长度固定的线性表，对线性表可以增删查改，线性表里的各元素的数据类型相同<br>2.在快速排序法里，每经过依次数据交换或移动后能消除多个逆序<br>3.线性表的长度为n。在最坏的情况下，比较次数为n-1的算法为寻找最大项<br>4.二叉树<br>5.软件是逻辑实体，具有抽象性<br>6.软件系统总体构图的作用是描述软件系统结构的图形工具<br>7.下面不属于结构化程序设计风格的是程序的执行效率<br>8.将数据库的结构划分多个层次，是为了提高数据库的物理独立性和逻辑独立性<br>9.定义学生选修课程关系模式SC(S#,Sn,C#,Cn,G)（其属性分别为学号、姓名、课程号、课程名、成绩）该关系的范式最高达到1NF<br>10.c语言程序里不正确的是整数和实数都能被准确无误地表示出来（实数不能，整数可以）<br>11.一个c语言程序由函数组成<br>12.关键字<br>13.c语言常量表示可以在数字后加上e或E表示10的幂，e或E后面必须为整数且为整数<br>14.用户标识符：第一个字符为字母或下划线，标识符区分大小写，后面可以为字母，数字，下划线<br>15.c语言中，整数可以以十进制，八进制，十六进制的形式输出<br>16.long型数值的格式符为%ld<br>17.格式符：十进制 %d 八进制 %o 十六进制 %x<br>18.赋值语句：变量&#x3D;表达式<br>19.带参宏指令：#define sub(a,b) a-b<br>20.所有的字符常量都可以作为整型量来处理<br>21.func((exp1,exp2),(exp3,exp4,exp5));调用了2个实参，里面有五个形参<br>22.int (*ptr)()含义：ptr是指向函数的指针,该函数返回一个int型数据。<br>23.字符数组初始化：单引号括起来的字符常量值存放一个字符，用字符数组存放字符串<br>24.若str1小于str2，则返回负整数，即小于0的数。若str1和str2相等，则返回0。若str1大于str2，则返回正整数，即大于0的数。<br>25.联合体不能在定义的时候初始化，内存长度等于最长的，其地址和各成员地址相同<br>26.文件由数据流形式组成，可按数据的形式分为二进制文件和文本文件</p>
<h5 id="2023-9"><a href="#2023-9" class="headerlink" title="2023.9"></a><strong>2023.9</strong></h5><p>1.线性表的链式存储结构所需要的存储空间一般要多于顺序存储结构<br>2.在栈中，栈底指针不变，栈中元素随栈顶指针的变化而动态变化<br>3.软件测试的目的是发现程序中的错误<br>4.软件危机表现 软件开发生产率低,软件质量难以控制,软件成本不断提高<br>5.软件生命周期是指软件产品从提出、实现、使用维护到停止使用退役的过程<br>6.层次型、网状型和关系型数据库划分原则是数据之间的联系方式<br>7.数据库设计中反映用户对数据规定的模式是外模式<br>8.在C语言中，程序的模块化是运用函数实现的<br>9.简朴程序设计的环节和顺序的说法:一方面拟定数据结构，然后拟定算法，再编码，并上机调试，最后整理文档</p>
]]></content>
      <tags>
        <tag>计算机二级c语言</tag>
      </tags>
  </entry>
  <entry>
    <title>光影iterationT 3.0.0</title>
    <url>/2024/10/07/iterationT3-0-0/</url>
    <content><![CDATA[<p>光影:iterationT 3.0.0<br>建筑:Maigusang 建筑接力作品<br><video controls><br>  <source src="\videos\i watch the moon.mp4" type="video/mp4"><br>  您的浏览器不支持 HTML5 视频标签。<br></video></p>
]]></content>
      <tags>
        <tag>Mincraft</tag>
      </tags>
  </entry>
  <entry>
    <title>代码问题与解决方法</title>
    <url>/2024/08/06/%E4%BB%A3%E7%A0%81%E9%97%AE%E9%A2%98%E4%B8%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h6 id="写代码报错改bug真的痛苦╥﹏╥"><a href="#写代码报错改bug真的痛苦╥﹏╥" class="headerlink" title="写代码报错改bug真的痛苦╥﹏╥"></a>写代码报错改bug真的痛苦╥﹏╥</h6><ol>
<li>数据结构书p28页：编写程序实现顺序表的逆置</li>
</ol>
<p>功能函数如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">void Vert(SeqList *L)         </span><br><span class="line">&#123;</span><br><span class="line">    int temp;int i;</span><br><span class="line">    if(L-&gt;n%2==0)</span><br><span class="line">    &#123;</span><br><span class="line">        for(i=0;i&lt;L-&gt;n/2;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            temp=L-&gt;element[i];</span><br><span class="line">            L-&gt;element[i]=L-&gt;element[L-&gt;n-i];</span><br><span class="line">            L-&gt;element[L-&gt;n-i]=temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else </span><br><span class="line">    &#123;</span><br><span class="line">        for(i=0;i&lt;(L-&gt;n-1)/2;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            temp=L-&gt;element[i];</span><br><span class="line">            L-&gt;element[i]=L-&gt;element[L-&gt;n-i];</span><br><span class="line">            L-&gt;element[L-&gt;n-i]=temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>想半天页没看出来哪里错了，一运行程序就开始死循环。然后问了文心一言。当顺序表元素个数为偶数时，程序运行没问题。当为奇数时，中间的元素 (L-&gt;n)&#x2F;2 作为中心点，在逆置后保留原位。但只循环到 (L-&gt;n-1)&#x2F;2 ，意味着最后一个元素没有交换。这是他的解释，后来我发现其实是我索引出错了，数组索引是从0开始的。中间的数无论是否交换都不变。</p>
<p>以下是一个统一的逆置标准：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">void Vert(SeqList *L) </span><br><span class="line">&#123;</span><br><span class="line">    int temp;</span><br><span class="line">    int i;</span><br><span class="line">    for (i = 0; i &lt; L-&gt;n / 2; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        temp = L-&gt;element[i];</span><br><span class="line">        L-&gt;element[i] = L-&gt;element[L-&gt;n - 1 - i];</span><br><span class="line">        L-&gt;element[L-&gt;n - 1 - i] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>代码问题与解决方法</tag>
      </tags>
  </entry>
  <entry>
    <title>关于暑假见习的一些感想和夏日闲谈</title>
    <url>/2024/08/22/%E5%85%B3%E4%BA%8E%E6%9A%91%E5%81%87%E8%A7%81%E4%B9%A0%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%83%B3%E5%92%8C%E9%97%B2%E8%B0%88/</url>
    <content><![CDATA[<p>我喜欢夏天的云，因为它看上去是那么的浓烈，触手可及。</p>
<p>现在暑假已经接近尾声了，夏天的云似乎也已经消散。</p>
<p>我知道，夏天正在消逝。</p>
<p>就好比手中的冰淇淋，逐渐融化。</p>
<span id="more"></span>

<p>夏天就要过去，好似从小到大都是这样。</p>
<p>翻看以前的说说，永远对夏日有着一丝依恋。</p>
<p>或许是因为我对过去的怀念吧。</p>
<p>我永远记得 在悠长的夏日里 </p>
<p>柳堡镇公园的凉亭下，我们一群人围着打三国杀。</p>
<p>清凉的空调房里，几个人坐在一起打街机，造梦西游3。</p>
<p>亦或是，去外公家划一条小船，在荷藕塘里找莲子。</p>
<p>这些都是什么时候的事呢? 大概十年前吧。</p>
<p>谈回现在，这个暑假，我在柳堡镇政府里见习了一个月。</p>
<p>做了些事情，涨了些见识。</p>
<p>最后还有幸参加了宝应县大学生暑期结业仪式。</p>
<p>总的来说，家乡对于我们是非常照顾的。</p>
<p>各种各样的人才政策也逐渐出台。</p>
<p>至少对我而言，我希望大学毕业后能够回到家乡找一份工作。</p>
<p>我依稀记得初中看过一本书，叫《云边有个小卖部》</p>
<p>对于刘十三这样的小镇青年来说，他想考上大学，去大城市生活。</p>
<p>但生活却有种种的不如意，最后是故乡给了他无限的温柔。</p>
<p>在南京生活了一年，虽然也没出去玩过几次。</p>
<p>但我觉得大城市与家乡的区别很简单。</p>
<p>可能就是柳堡少了蜜雪冰城吧，不能天天吃冰淇淋。</p>
<p>至于大人们考虑的教育，医疗资源丰富，基础设施，娱乐设施完备等。宝应也是具备的。</p>
<p>最后，还是聊聊政治吧。</p>
<p>与其说是政治，倒不如说是对当下的一些看法。</p>
<p>最近有什么事情呢？</p>
<p>法官王佳佳被杀案，邯郸银行董事长被人捅伤致死，苏州马翔宇举报贪污。</p>
<p>对于一些人来说，有些事情看多了，倒也淡然了。当然有人也压根不了解。</p>
<p>以前我也许会锐评一番。</p>
<p>现在嘛，我只能说，存在即合理。</p>
]]></content>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>诗</title>
    <url>/2024/08/04/%E5%8F%A4%E6%9C%88%E6%96%B9%E6%BA%90-%E5%A4%A7%E7%88%B1%E4%BB%99%E5%B0%8A%E8%AF%AD%E5%BD%95/</url>
    <content><![CDATA[<ul>
<li>大爱仙尊&#x2F;炼天魔尊</li>
</ul>
<div style="display:flex; align-items:center;">
    <div style="margin-right:100px;">
        <img class="image " src="\images\gy2.jpg" alt="gy" style="width:400px; height:auto;">
    </div>
    <div>
        <p>落魄谷中寒风吹，春秋蝉鸣少年归。</p>
        <p>荡魂山处石人泪，定仙游走魔向北。</p>
        <p>逆流河上万仙退，爱情不敌坚持泪。</p>
        <p>宿命天成命中败，仙尊悔而我不悔。</p>
        <p>早岁已知世事艰，仍许飞鸿荡云间。</p>
        <p>一路寒风身如絮，命海沉浮客独行。</p>
        <p>千磨万击心铸铁，殚精竭虑铸一剑。</p>
        <p>今朝剑指叠云处，炼蛊炼人还炼天！</p>
    </div>
</div>


]]></content>
      <tags>
        <tag>古月方源/蛊真人</tag>
      </tags>
  </entry>
  <entry>
    <title>困</title>
    <url>/2024/10/21/%E5%9B%B0/</url>
    <content><![CDATA[<p>今天下午8,9节上机课,从一点睡到三点,本来打算早点起来写python实验报告的。<br>上周日连通两宵打游戏,确实有点疯了。<br>最近事情挺多的,普通话考试,体测,物理期中考试复习······<br>这周就不学python了,看会数据结构和大物吧。</p>
<p>今晚行政课上GitHub找了个<a href="https://hzx0910.github.io/yavt.fengtao.xyz/">政治倾向测试</a>。</p>
<p>感兴趣的话可以试试。</p>
]]></content>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>建站成功感言</title>
    <url>/2024/07/31/%E5%BB%BA%E7%AB%99%E6%88%90%E5%8A%9F%E6%84%9F%E8%A8%80/</url>
    <content><![CDATA[<p>看了半天b站终于搭建好了，纪念一下！<br>接下来就是上传到github里，做些美化装饰了。<br><strong>以后这里就是的我的博客小站了，希望常来光顾呀 ヾ(๑╹ヮ╹๑)ﾉ”</strong></p>
]]></content>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>开学纪要</title>
    <url>/2024/09/03/%E5%BC%80%E5%AD%A6%E7%BA%AA%E8%A6%81/</url>
    <content><![CDATA[<p>开学了，大二又要学了。</p>
<p>新学期好像没啥规划。</p>
<p>学就是了。</p>
]]></content>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>序</title>
    <url>/2024/08/01/%E5%BA%8F/</url>
    <content><![CDATA[<hr>
<p>建立博客对于每个人而言，都有不一样的意义。在建立此博客前，我上网翻了很多人的博客，<br>大部分都是已经断更的，有的人已经工作，或许忘记了他们的博客，有的和我一样，还是学<br>生，或许一时兴起建立博客后就不再继续更新了。当然，我也看见了一些人的博客创作的非<br>常优秀，无论是css样式和其他功能的实现，还是每篇文章的技术解析。对我而言，我其实<br>想把这个博客当做记录我生活的一个工具。我或许会写一些游戏的攻略，记录一下大学生活<br>的美好瞬间，也可能像其他人一样，写一些电脑技术的学习或问题的解决的办法。当然，目<br>前来说，我无论是是思想上还是技术上都不怎么成熟，希望我能坚持学习下去，因为我觉得<br>这些都很有趣，以后或许等我工作了，这未尝不是一种宝藏。(<del>赛博记事本了属于是</del>)<br>而对于正在浏览本站的你来说，也可以四处逛逛，看看有什么有趣或有用的东西。</p>
]]></content>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>手机投屏至电脑方法</title>
    <url>/2024/10/10/%E6%89%8B%E6%9C%BA%E6%8A%95%E5%B1%8F%E8%87%B3%E7%94%B5%E8%84%91/</url>
    <content><![CDATA[<p>方法一：</p>
<p>机型:小米13(系统:hyperos)<br>软件：<a href="https://hyperos.mi.com/continuity">小米电脑管家</a><br>电脑操作系统:windows11<br><a href="https://wwyj.lanzouw.com/i9CNh1gc8igh">辅助插件</a>    密码:1111<br>由于电脑不是米家的，该插件用于模拟米家电脑，该方法我失败了，如果是米家全套配置可以试试。</p>
<p>方法二：</p>
<p>电脑操作系统:windows11<br>软件:windows11自带的投屏软件<br>电脑端：打开系统-&gt;找到投影到此电脑-&gt;下载插件：无线显示器</p>
<p style="text-align: center;">
    <img src="\images\投屏1.png" alt="minecraft">
</p>
<p style="text-align: center;">
    <img src="\images\投屏2.png" alt="minecraft">
</p>

<p>点击：启动无线显示应用以投影到此电脑</p>
<p>手机端：设置-&gt;更多连接-&gt;投屏</p>
<p>投屏后如何缩小：<br>1.使用任务管理器快捷键:ctrl+alt+del 回到桌面<br>2.点击投屏缩小图标并将鼠标多次在上边界移动会有缩小指标下拉</p>
<p style="text-align: center;">
    <img src="\images\投屏3.png" alt="minecraft">
</p>]]></content>
  </entry>
  <entry>
    <title>数据结构c语言课后习题</title>
    <url>/2024/10/09/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84c%E8%AF%AD%E8%A8%80%E8%AF%BE%E5%90%8E%E4%B9%A0%E9%A2%98/</url>
    <content><![CDATA[<h6 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h6><p>一.基础题<br>1.健壮的算法不会因为非法的输入数据而出现莫名其妙的状态<br>2.从逻辑结构上可以把数据结构分为线性结构和非线性结构<br>3.数据采用链式存储，存储单元的地址不一定连续<br>4.算法的时间复杂度取决于问题规模<br>5.下列程序段的时间复杂度</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for (i=0;i&lt;n;i++)             n</span><br><span class="line">    for (j=0;j&lt;n;j++)         n</span><br><span class="line">        x=x+1;                n^2 -&gt; O(n^2)</span><br></pre></td></tr></table></figure>
<p>二.扩展题<br>1.简述下列概念:数据、数据元素、数据项。<br>数据是计算机加工处理的对象；数据元素是数据的基本单位，在计算机程序中通常作为一个整体进行考虑和处理；数据项是组成数据元素的、不可分割的最小单位。</p>
<p>2.什么是数据结构?<br>数据结构是按某种逻辑关系组织起来的数据元素的集合，使用计算机语言描述并按一定的存储方式存储在计算机中，并在其上定义了一组运算。</p>
<p>3.简述逻辑结构的四种基本关系<br>集合结构、线性结构、树形结构和图形结构。在集合结构中，元素之间没有关系；线性结构中，元素之间存在一对一的关系；树形结构中，元素之间存在一对多的关系，其中最多只有一个元素没有前驱元素；图形结构，元素之间存在多对多的关系。<br>4.常见的存储结构有哪些?<br>顺序结构、链式结构、索引存储和散列存储</p>
<p>5.算法有哪些特征?<br>一个算法是对特定问题的求解步骤的一种描述，是指令的有限序列，其特征包括:<br>输入:算法有零个或多个输入<br>输出:算法至少产生一个输出<br>确定性:算法的每一条指令都有确切的定义，没有二义性。<br>可行性:可以通过已经实现的基本运算执行有限次来实现<br>有穷性:算法必须总能在执行有限步之后终止</p>
<p>6.算法和程序的区别和联系时什么?<br>联系：程序是计算机指令的有序集合；是算法用某种程序设计语言的表述，是算法在计算机上的具体实现<br>区别：在语言描述上不同，程序必须是用规定的程序设计语言来写，而算法的描述形式包括自然语言、伪代码、流程图和程序语言等;算法所描述的步骤一定是有限的，而程序可以无限地执行下去，比如一个死循环可以称为程序，但不能称为算法。</p>
<p>7.简述衡量算法优劣的基本标准<br>正确性:算法的执行结果应当满足功能需求，无语法错误，无逻辑错误<br>简明性:思路清晰、层次分明、易读易懂，有利于调试维护<br>健壮性:当输入不合法数据时，应能做适当处理，不至于引起严重后果<br>效率:有效使用存储空间和有高的时间效率<br>最优性:解决同一个问题可能有多种算法，应进行比较，选择最佳算法<br>可使用性:用户友好性</p>
<h6 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h6><p>一.基础题<br>1.如果线性表最常用的操作是读取第i个元素的值,则采用顺序表存储方式最节省时间<br>2.对于线性表而言，除第一个元素和最后一个元素外，其余每一个元素都有且仅有一个直接前驱和直接后驱<br>3.已知顺序表中每个元素占2个存储单位,第一个元素a0在内存中的存储地址是100,则表中元素a5在内存中的存储地址为110<br>4.线性表采用链式存储结构所具有的特点为插入和删除操作不必移动元素<br>5.带表头结点的单链表中,first指向表头结点,当first-&gt;link &#x3D;&#x3D; NULL 时，带表头结点的单链表为空。<br>6.设双向循环链表中结点包括数据域data、左指针域llink和右指针域rlink,若在指针p所指向的结点之后插入指针s所指向的结点,则执行如下操作<br>s-&gt;llink&#x3D;p;s-&gt;rlink&#x3D;p-&gt;rlink;p-&gt;rlink-&gt;link&#x3D;s;p-&gt;rlink&#x3D;s;<br>7.线性表若采用链式存储结构，要求内存中可用存储单元的地址连续或不连续都可以。<br>8.在单链表中增加表头结点的目的是方便插入和删除运算的实现<br>9.若某线性表中最常用的操作是存取任一指定序号的元素和在最后进行插入和删除运算，则采用顺序表存储方式最节省时间。<br>10.循环列表的主要优点是从表中的任意结点出发都能扫描到整个链表</p>
<h6 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h6><p>一.基础题<br>1.栈和队列的主要区别是限定插入和删除的位置不同。</p>
<p>2.设A,B,C三个元素依次进栈(进栈后可立即出栈)，请写出所有可能的出栈序列。<br>五种:ABC,ACB,BAC,BCA,CBA</p>
<p>3.阐述栈和队列的特点，并说明他们的作用。<br>堆栈是先进后出，队列为先进先出。逻辑结构均为线性结构。存储结构既有顺序存储也有链式存储。</p>
<p>4.循环队列的元素存放在数组Q中,M是数组Q的最大长度,队尾指针rear指向队尾元素在Q中的下标值,队头指针front指向对头元素在Q中的下标值-1。写出队列为空和为满的条件。<br>队列为空:front &#x3D; rear 队列为满：(rear+1)%M &#x3D;&#x3D; front</p>
<p>5.利用栈计算下列表达式，指出栈中最多有几个元素，并给出对应的中缀表达式，<br>(1)5 3 2 * 3 + 3 &#x2F; +<br>   ((3+(2<em>3))&#x2F;3)+5&#x3D;8<br>   最多三个元素<br>(2)4 2 4 1 * 1 3 * - ^ 2 1 * &#x2F; +<br>   2^((4</em>1)-(1<em>3))&#x2F;(2</em>1)+4&#x3D;5<br>   最多五个元素</p>
<p>6.写出下列表达式的后缀形式<br>(1) (a+b)&#x2F;(c+d)            a b + c d + &#x2F;<br>(2) b^2-4<em>a</em>c              b 2 ^ 4 a * c * -<br>(3) a<em>c-b&#x2F;c^2              a c * b c 2 ^ &#x2F; -<br>(4) (a+b)<em>c+d&#x2F;(e+f)        a b + c * d e f + &#x2F; +<br>(5) (a+b)</em>(c</em>d+e)-a*c      a b + c d * e + * a c * -</p>
<p>7.什么是递归，递归算法？比较递归和非递归算法的优缺点。<br>递归算法是算法过程中存在调用自身的结构，递归算法的优点是程序非常简洁和清晰，且易于分析。但它的缺点是费时间费空间。非递归算法则与之相反。</p>
<p><strong>第四章不知道为什么字符串那部分我没印象，估计老师没讲，课后习题里也没有，跳了</strong></p>
<h5 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h5><p>1.二维数组A[4][3]中数组元素以行优先顺序存储,已知loc(A[0][0])&#x3D;100,一个数组元素占四个单位存储空间，则数组元素A[3][2]的存储地址为:140 &#x3D; 100 + (4*2+2)*4<br>2.三维数组A[5][4][3]中数组元素以行优先顺序存储,已知loc(A[0][0][0])&#x3D;100,一个数组元素占4个单位存储空间,则数组元素A[2][2][2]的存储地址为:200<br>3.对10阶对称矩阵A中上三角元素以行优先顺序存储,已知loc(a00)&#x3D;100,一个矩阵元素占2个单位存储空间，则矩阵元素a76的存储地址为:192<br>4.对稀疏矩阵进行压缩存储的目的是节省存储空间<br>5.数组不同于线性表,不便于像线性表一样进行数据元素的插入与删除运算</p>
<h5 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h5>]]></content>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>数模竞赛</title>
    <url>/2024/10/24/%E6%95%B0%E6%A8%A1%E7%AB%9E%E8%B5%9B/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>无题</title>
    <url>/2024/09/11/%E6%97%A0%E9%A2%98/</url>
    <content><![CDATA[<p>开学一周，双周课挺少的。</p>
<p>学校发了月饼，中秋节快到了。</p>
<p>回去吗？</p>
<p>感觉空荡荡的。</p>
]]></content>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>有感</title>
    <url>/2024/10/14/%E6%9C%89%E6%84%9F/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="543cc8ca36ccf018e782e31d068233f827f4db075afb604730db94262233dbff">4fd4a664b4e2ea93f3dc6fbdf52959d1a0da98192a65b74a6ab59801871092a7a7c0726860edf6583be35564db038af1d6540043f8266c1939d602d4b0effba2e131b6b03bd8a95ff6f9680bfeb3f1311653a78f0345dbba73ec9d46e32b7fb145e4802fd2a2d6843dc14abbd61cfa371a9fd28f0a53c394b9c60e415578aeaebf774a91ceaf8c124309881699e1faf1376db8271bf792504a763914c8b3ddc5</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>用python演奏音乐</title>
    <url>/2024/10/26/%E7%94%A8python%E6%BC%94%E5%A5%8F%E9%9F%B3%E4%B9%90/</url>
    <content><![CDATA[<p>导入库:mido<br>music 是一个自定义函数，用于向 MIDI 轨道中添加音符的开启和关闭消息。这个函数接收三个参数：note（音符的索引），base_num（基准音高的八度偏移量），以及 base_time（音符的基础持续时间，以某种相对单位表示）。</p>
<span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import mido</span><br><span class="line">mid = mido.MidiFile()</span><br><span class="line">track = mido.MidiTrack()</span><br><span class="line">mid.tracks.append(track)</span><br><span class="line">#bpm = \frac&#123;60000000&#125;&#123;tempo&#125;</span><br><span class="line">def music(note,base_num,base_time):</span><br><span class="line">    </span><br><span class="line">    #meta_time = 60 * 60 * 10 / bpm</span><br><span class="line">    major_notes = [0, 2, 2, 1, 2, 2, 2, 1]</span><br><span class="line">    base_note = 60</span><br><span class="line">    track.append(mido.Message(&#x27;note_on&#x27;, note=base_note+base_num*12 + sum(major_notes[0:note]), velocity=96, time=0,channel=1))</span><br><span class="line">    track.append(mido.Message(&#x27;note_off&#x27;, note=base_note+base_num*12 + sum(major_notes[0:note]), velocity=96, time=int(480*base_time),channel=1))</span><br><span class="line">    #track.append(mido.Message(&#x27;note_on&#x27;, note=base_note, velocity=96, time=0))</span><br><span class="line">    #track.append(mido.Message(&#x27;note_off&#x27;, note=base_note, velocity=96, time=480*base_time))</span><br></pre></td></tr></table></figure>

<p>之后定义music函数:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def lemon_music():</span><br><span class="line">    #1</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(2,1,0.5)</span><br><span class="line"></span><br><span class="line">    music(3,1,1)</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(6,0,1.5)</span><br><span class="line">    music(2,1,1)</span><br><span class="line"></span><br><span class="line">    music(7,0,1)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line">    music(3,0,1.5)</span><br><span class="line">    music(7,0,1)</span><br><span class="line"></span><br><span class="line">    music(6,0,1)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line">    music(1,0,1.5)</span><br><span class="line">    music(5,0,1)</span><br><span class="line"></span><br><span class="line">    music(3,0,3)</span><br><span class="line">    #2</span><br><span class="line">    music(2,0,0.5)</span><br><span class="line">    music(3,0,0.5)</span><br><span class="line"></span><br><span class="line">    music(4,0,2)</span><br><span class="line">    #</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(7,0,0.5)</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line"></span><br><span class="line">    music(5,0,2)</span><br><span class="line">    music(4,0,1)</span><br><span class="line">    music(3,0,0.75)</span><br><span class="line">    music(4,0,0.25)</span><br><span class="line"></span><br><span class="line">    music(4,0,2)</span><br><span class="line">    #</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(7,0,0.5)</span><br><span class="line">    music(6,0,0.5)</span><br><span class="line"></span><br><span class="line">    music(5,0,3)</span><br><span class="line">    #</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(2,1,0.5)</span><br><span class="line"></span><br><span class="line">    music(3,1,1)</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(6,0,1.5)</span><br><span class="line">    music(2,1,1)</span><br><span class="line"></span><br><span class="line">    music(7,0,1)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line">    music(3,0,1.5)</span><br><span class="line">    music(7,0,1)</span><br><span class="line"></span><br><span class="line">    music(6,0,1)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line">    music(1,0,1.5)</span><br><span class="line">    music(5,0,1)</span><br><span class="line"></span><br><span class="line">    music(3,0,3)</span><br><span class="line">    #</span><br><span class="line">    music(2,0,0.5)</span><br><span class="line">    music(3,0,0.5)</span><br><span class="line"></span><br><span class="line">    music(4,0,2)</span><br><span class="line">    #</span><br><span class="line">    music(5,0,1)</span><br><span class="line">    music(4,0,0.5)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line"></span><br><span class="line">    music(3,0,1)</span><br><span class="line">    music(5,0,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(3,1,1)</span><br><span class="line"></span><br><span class="line">    music(2,1,1.5)</span><br><span class="line">    music(2,1,0.5)</span><br><span class="line">    music(2,1,0.5)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line"></span><br><span class="line">    music(1,1,4)</span><br><span class="line">    #加空白</span><br><span class="line">    track.append(mido.Message(&#x27;note_on&#x27;, note=0, velocity=0, time=0))</span><br><span class="line">    track.append(mido.Message(&#x27;note_off&#x27;, note=0, velocity=0, time=480*7))</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(2,1,0.5)</span><br><span class="line"></span><br><span class="line">    music(3,1,1)</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(6,0,1.5)</span><br><span class="line">    music(2,1,1)</span><br><span class="line"></span><br><span class="line">    music(7,0,1)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line">    music(3,0,1.5)</span><br><span class="line">    music(7,0,1)</span><br><span class="line"></span><br><span class="line">    music(6,0,1)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line">    music(1,0,1.5)</span><br><span class="line">    music(5,0,1)</span><br><span class="line"></span><br><span class="line">    music(3,0,3)</span><br><span class="line"></span><br><span class="line">    #</span><br><span class="line">    music(2,0,0.5)</span><br><span class="line">    music(3,0,0.5)</span><br><span class="line"></span><br><span class="line">    music(4,0,2)</span><br><span class="line">    #</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(7,0,0.5)</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line"></span><br><span class="line">    music(5,0,2)</span><br><span class="line">    music(4,0,1)</span><br><span class="line">    music(3,0,0.75)</span><br><span class="line">    music(4,0,0.25)</span><br><span class="line"></span><br><span class="line">    music(4,0,2)</span><br><span class="line">    #</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(7,0,0.5)</span><br><span class="line">    music(6,0,0.5)</span><br><span class="line"></span><br><span class="line">    music(5,0,3)</span><br><span class="line">    #</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(2,1,0.5)</span><br><span class="line"></span><br><span class="line">    music(3,1,1)</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(6,0,1.5)</span><br><span class="line">    music(2,1,1)</span><br><span class="line"></span><br><span class="line">    music(7,0,1)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line">    music(3,0,1.5)</span><br><span class="line">    music(7,0,1)</span><br><span class="line"></span><br><span class="line">    music(6,0,1)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line">    music(1,0,1.5)</span><br><span class="line">    music(5,0,1)</span><br><span class="line"></span><br><span class="line">    music(3,0,3)</span><br><span class="line">    #</span><br><span class="line">    music(2,0,0.5)</span><br><span class="line">    music(3,0,0.5)</span><br><span class="line"></span><br><span class="line">    music(4,0,2)</span><br><span class="line">    music(5,0,1)</span><br><span class="line">    music(4,0,0.5)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line"></span><br><span class="line">    music(3,0,1)</span><br><span class="line">    music(5,0,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(3,1,1)</span><br><span class="line"></span><br><span class="line">    music(2,1,0.5)</span><br><span class="line">    music(2,1,1.5)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(1,1,1.25)</span><br><span class="line"></span><br><span class="line">    music(1,1,4)</span><br><span class="line">    #</span><br><span class="line">    music(6,0,1.5)</span><br><span class="line">    music(7,0,0.5)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(7,0,0.5)</span><br><span class="line">    music(6,0,0.5)</span><br><span class="line"></span><br><span class="line">    music(5,0,1)</span><br><span class="line">    music(3,1,1)</span><br><span class="line">    music(3,1,2)</span><br><span class="line">    #</span><br><span class="line"></span><br><span class="line">    music(2,1,1.5)</span><br><span class="line">    music(3,1,0.5)</span><br><span class="line">    music(4,1,1)</span><br><span class="line">    music(3,1,0.5)</span><br><span class="line">    music(2,1,0.5)</span><br><span class="line"></span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(2,1,1)</span><br><span class="line">    music(5,0,2)</span><br><span class="line">    #</span><br><span class="line">    music(4,0,1.5)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line">    music(6,0,1)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line">    music(4,0,0.5)</span><br><span class="line">    </span><br><span class="line">    music(3,0,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line"></span><br><span class="line">    #</span><br><span class="line">    music(7,0,2)</span><br><span class="line">    music(6,0,1)</span><br><span class="line">    music(7,0,1)</span><br><span class="line"></span><br><span class="line">    music(1,1,1)</span><br><span class="line">    #加空白</span><br><span class="line">    track.append(mido.Message(&#x27;note_on&#x27;, note=0, velocity=0, time=0))</span><br><span class="line">    track.append(mido.Message(&#x27;note_off&#x27;, note=0, velocity=0, time=480*1))</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(3,1,0.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(1,1,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    music(3,1,0.75)</span><br><span class="line">    music(5,1,1.25)#/</span><br><span class="line"></span><br><span class="line">    music(2,1,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    #</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(3,1,0.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(1,1,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    music(3,1,0.75)</span><br><span class="line">    music(5,1,1.25)</span><br><span class="line"></span><br><span class="line">    music(2,1,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    #</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(3,1,0.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(1,1,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    music(3,1,0.75)</span><br><span class="line">    music(5,1,1.25)#\</span><br><span class="line"></span><br><span class="line">    music(5,1,0.125)</span><br><span class="line">    music(6,1,0.375)</span><br><span class="line">    music(5,1,1.5)</span><br><span class="line"></span><br><span class="line">    music(5,1,0.5)</span><br><span class="line">    music(1,2,1.5)</span><br><span class="line"></span><br><span class="line">    music(7,1,0.5)</span><br><span class="line">    music(5,1,1.5)</span><br><span class="line">    music(3,1,0.5)</span><br><span class="line">    music(5,1,1)</span><br><span class="line">    music(2,1,0.5)</span><br><span class="line"></span><br><span class="line">    music(2,1,2)</span><br><span class="line">    #</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(3,1,0.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(1,1,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    music(3,1,0.75)</span><br><span class="line">    music(5,1,1.25)</span><br><span class="line">    #</span><br><span class="line">    music(2,1,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    music(1,1,0.75)</span><br><span class="line">    music(1,1,0.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(3,1,0.25)</span><br><span class="line"></span><br><span class="line">    music(4,1,0.75)</span><br><span class="line">    music(3,1,1.25)#\</span><br><span class="line">    music(3,1,0.125)</span><br><span class="line">    music(2,1,0.875)#\</span><br><span class="line">    music(7,0,1)</span><br><span class="line"></span><br><span class="line">    music(1,1,3)</span><br><span class="line">    #</span><br><span class="line">    music(1,1,0.75)</span><br><span class="line">    music(7,0,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,1)</span><br><span class="line">    music(7,0,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(2,1,1)</span><br><span class="line"></span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(5,0,1)</span><br><span class="line">    music(3,0,1)#\</span><br><span class="line">    music(5,0,1)</span><br><span class="line"></span><br><span class="line">    music(6,0,0.75)</span><br><span class="line">    music(2,1,1.25)</span><br><span class="line">    music(7,0,0.75)</span><br><span class="line">    music(1,1,1.25)</span><br><span class="line"></span><br><span class="line">    music(1,1,3)</span><br><span class="line">    music(1,1,0.75)</span><br><span class="line">    music(7,0,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,1)</span><br><span class="line">    music(7,0,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(2,1,1)</span><br><span class="line"></span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(5,0,1)</span><br><span class="line">    music(1,1,1)#\</span><br><span class="line">    music(2,1,1)</span><br><span class="line"></span><br><span class="line">    music(3,1,0.75)</span><br><span class="line">    music(4,1,1.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(1,1,1.25)</span><br><span class="line"></span><br><span class="line">    music(1,1,3)</span><br><span class="line">    #Kongbai</span><br><span class="line">    #</span><br><span class="line">    music(3,1,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(5,1,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(2,1,1)</span><br><span class="line">    music(5,1,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(2,1,1)</span><br><span class="line">    music(5,1,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(2,1,1)</span><br><span class="line">    music(3,1,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(2,1,2)</span><br><span class="line">    music(5,1,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(2,1,1)</span><br><span class="line">    music(5,1,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(2,1,2)</span><br><span class="line">    music(1,1,2)</span><br><span class="line">    music(2,1,3)</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(2,1,0.5)</span><br><span class="line"></span><br><span class="line">    music(3,1,1)</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(6,0,1.5)</span><br><span class="line">    music(2,1,1)</span><br><span class="line"></span><br><span class="line">    music(7,0,1)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line">    music(3,0,1.5)</span><br><span class="line">    music(7,0,1)</span><br><span class="line"></span><br><span class="line">    music(6,0,1)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line">    music(1,0,1.5)</span><br><span class="line">    music(5,0,1)</span><br><span class="line"></span><br><span class="line">    music(3,0,3)</span><br><span class="line"></span><br><span class="line">    #</span><br><span class="line">    music(2,0,0.5)</span><br><span class="line">    music(3,0,0.5)</span><br><span class="line"></span><br><span class="line">    music(4,0,2)</span><br><span class="line">    #</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(7,0,0.5)</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line"></span><br><span class="line">    music(5,0,2)</span><br><span class="line">    music(4,0,1)</span><br><span class="line">    music(3,0,0.75)</span><br><span class="line">    music(4,0,0.25)</span><br><span class="line"></span><br><span class="line">    music(4,0,2)</span><br><span class="line">    #</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(7,0,0.5)</span><br><span class="line">    music(6,0,0.5)</span><br><span class="line"></span><br><span class="line">    music(5,0,3)</span><br><span class="line">    #</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(2,1,0.5)</span><br><span class="line"></span><br><span class="line">    music(3,1,1)</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(6,0,1.5)</span><br><span class="line">    music(2,1,1)</span><br><span class="line"></span><br><span class="line">    music(7,0,1)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line">    music(3,0,1.5)</span><br><span class="line">    music(7,0,1)</span><br><span class="line"></span><br><span class="line">    music(6,0,1)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line">    music(1,0,1.5)</span><br><span class="line">    music(5,0,1)</span><br><span class="line"></span><br><span class="line">    music(3,0,3)</span><br><span class="line">    #</span><br><span class="line">    music(2,0,0.5)</span><br><span class="line">    music(3,0,0.5)</span><br><span class="line"></span><br><span class="line">    music(4,0,2)</span><br><span class="line">    music(5,0,1)</span><br><span class="line">    music(4,0,0.5)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line"></span><br><span class="line">    music(3,0,1)</span><br><span class="line">    music(5,0,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(3,1,1)</span><br><span class="line"></span><br><span class="line">    music(2,1,0.5)</span><br><span class="line">    music(2,1,1.5)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(1,1,1.25)</span><br><span class="line"></span><br><span class="line">    music(1,1,4)</span><br><span class="line">    #</span><br><span class="line">    music(6,0,1.5)</span><br><span class="line">    music(7,0,0.5)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(7,0,0.5)</span><br><span class="line">    music(6,0,0.5)</span><br><span class="line"></span><br><span class="line">    music(5,0,1)</span><br><span class="line">    music(3,1,1)</span><br><span class="line">    music(3,1,2)</span><br><span class="line">    #</span><br><span class="line"></span><br><span class="line">    music(2,1,1.5)</span><br><span class="line">    music(3,1,0.5)</span><br><span class="line">    music(4,1,1)</span><br><span class="line">    music(3,1,0.5)</span><br><span class="line">    music(2,1,0.5)</span><br><span class="line"></span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(2,1,1)</span><br><span class="line">    music(5,0,2)</span><br><span class="line">    #</span><br><span class="line">    music(4,0,1.5)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line">    music(6,0,1)</span><br><span class="line">    music(5,0,0.5)</span><br><span class="line">    music(4,0,0.5)</span><br><span class="line">    </span><br><span class="line">    music(3,0,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line"></span><br><span class="line">    #</span><br><span class="line">    music(7,0,2)</span><br><span class="line">    music(6,0,1)</span><br><span class="line">    music(7,0,1)</span><br><span class="line"></span><br><span class="line">    music(1,1,1)</span><br><span class="line">    #加空白</span><br><span class="line">    track.append(mido.Message(&#x27;note_on&#x27;, note=0, velocity=0, time=0))</span><br><span class="line">    track.append(mido.Message(&#x27;note_off&#x27;, note=0, velocity=0, time=480*1))</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(3,1,0.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(1,1,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    music(3,1,0.75)</span><br><span class="line">    music(5,1,1.25)#/</span><br><span class="line"></span><br><span class="line">    music(2,1,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    #</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(3,1,0.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(1,1,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    music(3,1,0.75)</span><br><span class="line">    music(5,1,1.25)</span><br><span class="line"></span><br><span class="line">    music(2,1,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    #</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(3,1,0.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(1,1,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    music(3,1,0.75)</span><br><span class="line">    music(5,1,1.25)#\</span><br><span class="line"></span><br><span class="line">    music(5,1,0.125)</span><br><span class="line">    music(6,1,0.375)</span><br><span class="line">    music(5,1,1.5)</span><br><span class="line"></span><br><span class="line">    music(5,1,0.5)</span><br><span class="line">    music(1,2,1.5)</span><br><span class="line"></span><br><span class="line">    music(7,1,0.5)</span><br><span class="line">    music(5,1,1.5)</span><br><span class="line">    music(3,1,0.5)</span><br><span class="line">    music(5,1,1)</span><br><span class="line">    music(2,1,0.5)</span><br><span class="line"></span><br><span class="line">    music(2,1,2)</span><br><span class="line">    #</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(3,1,0.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(1,1,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    music(3,1,0.75)</span><br><span class="line">    music(5,1,1.25)</span><br><span class="line">    #</span><br><span class="line">    music(2,1,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    music(1,1,0.75)</span><br><span class="line">    music(1,1,0.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(3,1,0.25)</span><br><span class="line"></span><br><span class="line">    music(4,1,0.75)</span><br><span class="line">    music(3,1,1.25)#\</span><br><span class="line">    music(3,1,0.125)</span><br><span class="line">    music(2,1,0.875)#\</span><br><span class="line">    music(7,0,1)</span><br><span class="line"></span><br><span class="line">    music(1,1,3)</span><br><span class="line">    #</span><br><span class="line">    music(1,1,0.75)</span><br><span class="line">    music(7,0,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,1)</span><br><span class="line">    music(7,0,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(2,1,1)</span><br><span class="line"></span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(5,0,1)</span><br><span class="line">    music(3,0,1)#\</span><br><span class="line">    music(5,0,1)</span><br><span class="line"></span><br><span class="line">    music(6,0,0.75)</span><br><span class="line">    music(2,1,1.25)</span><br><span class="line">    music(7,0,0.75)</span><br><span class="line">    music(1,1,1.25)</span><br><span class="line"></span><br><span class="line">    music(1,1,3)</span><br><span class="line">    music(1,1,0.75)</span><br><span class="line">    music(7,0,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,1)</span><br><span class="line">    music(7,0,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(2,1,1)</span><br><span class="line"></span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(5,0,1)</span><br><span class="line">    music(1,1,1)#\</span><br><span class="line">    music(2,1,1)</span><br><span class="line"></span><br><span class="line">    music(3,1,0.75)</span><br><span class="line">    music(4,1,1.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(1,1,1.25)</span><br><span class="line"></span><br><span class="line">    music(1,1,3)</span><br><span class="line">    #Kongbai</span><br><span class="line">    #</span><br><span class="line">    music(1,1,2)</span><br><span class="line">    music(1,1,1.75)</span><br><span class="line">    music(4,0,0.25)</span><br><span class="line">    music(1,1,2)</span><br><span class="line">    music(7,0,2)</span><br><span class="line"></span><br><span class="line">    music(1,1,2)</span><br><span class="line">    music(5,1,2)</span><br><span class="line"></span><br><span class="line">    music(6,1,2)</span><br><span class="line">    music(5,1,2)</span><br><span class="line"></span><br><span class="line">    music(2,1,2)</span><br><span class="line">    music(4,1,2)</span><br><span class="line"></span><br><span class="line">    music(3,1,4)</span><br><span class="line"></span><br><span class="line">    music(1,1,2)</span><br><span class="line">    music(3,1,2)</span><br><span class="line"></span><br><span class="line">    music(4,1,2)</span><br><span class="line">    music(3,1,2)</span><br><span class="line">    </span><br><span class="line">    music(2,1,2)</span><br><span class="line">    music(7,0,2)</span><br><span class="line"></span><br><span class="line">    music(1,1,4)</span><br><span class="line"></span><br><span class="line">    music(1,1,2)</span><br><span class="line">    music(5,1,2)</span><br><span class="line"></span><br><span class="line">    music(6,1,2)</span><br><span class="line">    music(5,1,2)</span><br><span class="line"></span><br><span class="line">    music(2,1,2)</span><br><span class="line">    music(4,1,1)</span><br><span class="line">    music(3,1,1)</span><br><span class="line"></span><br><span class="line">    music(3,1,4)</span><br><span class="line"></span><br><span class="line">    music(1,1,2)</span><br><span class="line">    music(3,1,2)</span><br><span class="line"></span><br><span class="line">    music(4,1,2)</span><br><span class="line">    music(3,1,2)</span><br><span class="line"></span><br><span class="line">    music(2,1,2)</span><br><span class="line">    music(7,0,2)</span><br><span class="line"></span><br><span class="line">    music(1,1,2)</span><br><span class="line">    #kongbai</span><br><span class="line"></span><br><span class="line">    music(6,0,1)</span><br><span class="line">    music(7,0,0.5)</span><br><span class="line"></span><br><span class="line">    music(1,1,2)</span><br><span class="line">    music(5,1,2)</span><br><span class="line"></span><br><span class="line">    music(6,1,2)</span><br><span class="line">    music(5,1,1)</span><br><span class="line">    music(2,1,1)</span><br><span class="line"></span><br><span class="line">    music(2,1,2)</span><br><span class="line">    music(4,1,1)</span><br><span class="line">    music(3,1,1)</span><br><span class="line"></span><br><span class="line">    music(3,1,4)</span><br><span class="line"></span><br><span class="line">    music(1,1,2)</span><br><span class="line">    music(3,1,2)</span><br><span class="line"></span><br><span class="line">    music(4,1,2)</span><br><span class="line">    music(3,1,2)</span><br><span class="line"></span><br><span class="line">    music(2,1,2)</span><br><span class="line">    music(7,0,2)</span><br><span class="line"></span><br><span class="line">    music(1,1,3)</span><br><span class="line">    music(6,0,0.5)</span><br><span class="line">    music(7,0,0.5)</span><br><span class="line"></span><br><span class="line">    music(1,1,2)</span><br><span class="line">    music(5,1,2)</span><br><span class="line"></span><br><span class="line">    music(6,1,2)</span><br><span class="line">    music(5,1,2)</span><br><span class="line"></span><br><span class="line">    music(7,1,2)</span><br><span class="line">    music(7,1,1)</span><br><span class="line">    music(1,2,1)</span><br><span class="line"></span><br><span class="line">    music(1,2,4)</span><br><span class="line"></span><br><span class="line">    music(1,2,2)</span><br><span class="line">    music(5,1,2)</span><br><span class="line"></span><br><span class="line">    music(4,1,2)</span><br><span class="line">    music(3,1,1)</span><br><span class="line">    music(2,1,1)</span><br><span class="line"></span><br><span class="line">    music(2,1,2)</span><br><span class="line">    music(2,1,2)</span><br><span class="line"></span><br><span class="line">    music(6,0,2)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(3,2,1)</span><br><span class="line"></span><br><span class="line">    music(4,2,4)</span><br><span class="line">    music(4,2,1)</span><br><span class="line">    music(5,2,1)</span><br><span class="line">    music(5,2,1)</span><br><span class="line">    music(6,1,1)</span><br><span class="line">    music(4,2,4)</span><br><span class="line">    music(4,1,1)</span><br><span class="line">    #kongbai</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(3,1,0.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(1,1,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    music(3,1,0.75)</span><br><span class="line">    music(5,1,1.25)#/</span><br><span class="line"></span><br><span class="line">    music(2,1,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    #</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(3,1,0.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(1,1,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    music(3,1,0.75)</span><br><span class="line">    music(5,1,1.25)</span><br><span class="line"></span><br><span class="line">    music(2,1,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    #</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(3,1,0.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(1,1,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    music(3,1,0.75)</span><br><span class="line">    music(5,1,1.25)#\</span><br><span class="line"></span><br><span class="line">    music(5,1,0.125)</span><br><span class="line">    music(6,1,0.375)</span><br><span class="line">    music(5,1,1.5)</span><br><span class="line"></span><br><span class="line">    music(5,1,0.5)</span><br><span class="line">    music(1,2,1.5)</span><br><span class="line"></span><br><span class="line">    music(7,1,0.5)</span><br><span class="line">    music(5,1,1.5)</span><br><span class="line">    music(3,1,0.5)</span><br><span class="line">    music(5,1,1)</span><br><span class="line">    music(2,1,0.5)</span><br><span class="line"></span><br><span class="line">    music(2,1,2)</span><br><span class="line">    #</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(3,1,0.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(1,1,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    music(3,1,0.75)</span><br><span class="line">    music(5,1,1.25)</span><br><span class="line">    #</span><br><span class="line">    music(2,1,0.5)</span><br><span class="line">    music(1,1,1.5)</span><br><span class="line">    music(1,1,0.75)</span><br><span class="line">    music(1,1,0.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(3,1,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,1,0.75)</span><br><span class="line">    music(3,1,1.25)#\</span><br><span class="line">    music(3,1,0.125)</span><br><span class="line">    music(2,1,0.875)#\</span><br><span class="line">    music(7,0,1)</span><br><span class="line"></span><br><span class="line">    music(1,1,3)</span><br><span class="line">    #</span><br><span class="line">    music(1,1,0.75)</span><br><span class="line">    music(7,0,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,1)</span><br><span class="line">    music(7,0,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(2,1,1)</span><br><span class="line"></span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(5,0,1)</span><br><span class="line">    music(3,0,1)#\</span><br><span class="line">    music(5,0,1)</span><br><span class="line"></span><br><span class="line">    music(6,0,0.75)</span><br><span class="line">    music(2,1,1.25)</span><br><span class="line">    music(7,0,0.75)</span><br><span class="line">    music(1,1,1.25)</span><br><span class="line"></span><br><span class="line">    music(1,1,3)</span><br><span class="line">    music(1,1,0.75)</span><br><span class="line">    music(7,0,0.25)</span><br><span class="line"></span><br><span class="line">    music(6,0,1)</span><br><span class="line">    music(7,0,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(2,1,1)</span><br><span class="line"></span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(5,0,1)</span><br><span class="line">    music(4,0,1)</span><br><span class="line">    music(3,1,1)</span><br><span class="line"></span><br><span class="line">    music(4,1,0.75)</span><br><span class="line">    music(1,1,1.25)</span><br><span class="line">    music(1,1,0.75)</span><br><span class="line">    music(5,1,1.25)</span><br><span class="line"></span><br><span class="line">    music(3,1,3)</span><br><span class="line">    music(3,1,0.75)</span><br><span class="line">    music(2,1,0.25)</span><br><span class="line"></span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(2,1,1)</span><br><span class="line">    music(3,1,1)</span><br><span class="line">    music(4,1,1)</span><br><span class="line"></span><br><span class="line">    music(3,1,1)</span><br><span class="line">    music(1,1,1)</span><br><span class="line">    music(5,0,1)</span><br><span class="line">    music(3,0,1)</span><br><span class="line"></span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(3,1,1.25)</span><br><span class="line">    music(2,1,0.75)</span><br><span class="line">    music(1,1,1.25)</span><br><span class="line"></span><br><span class="line">    music(1,1,2)</span><br><span class="line">    music(4,-2,0.25)</span><br><span class="line">    music(1,-1,0.25)</span><br><span class="line">    music(4,-1,0.25)</span><br><span class="line">    music(5,-1,0.25)</span><br><span class="line">    music(1,0,0.25)</span><br><span class="line">    music(2,0,0.25)</span><br><span class="line">    music(5,0,0.25)</span><br><span class="line">    music(1,1,0.25)</span><br><span class="line"></span><br><span class="line">    music(2,1,0.25)</span><br><span class="line">    music(5,1,0.25)</span><br><span class="line">    music(1,2,0.25)</span><br><span class="line">    music(2,2,0.25)</span><br><span class="line">    music(5,2,0.25)</span><br><span class="line">    music(1,3,0.75)</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(5,1,1.5)</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(5,1,1.5)</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(5,1,1.5)</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(5,1,1.5)</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(5,1,1.5)</span><br><span class="line">    music(1,1,0.5)</span><br><span class="line">    music(5,1,3.5)</span><br><span class="line"></span><br><span class="line">lemon_music()</span><br><span class="line">mid.save(&#x27;lemon.mid&#x27;)</span><br></pre></td></tr></table></figure>
<p>运行lemon_music函数并生成此音乐的mid文件<br>之后写一个mid文件运行的python的程序或直接找到文件用现有的音乐播放器打开。</p>
<p>lemon音乐演示如下:</p>
<p>我加载网页后发现HTML5不支持midi文件播放。没办法了。</p>
<p>这边转成MP3:</p>
<audio controls>  
        <source src="/music/lemon.mp3" type="audio/mpeg">  
        您的浏览器不支持音频元素。  
</audio>  


]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>离散数学笔记</title>
    <url>/2024/09/03/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>无聊写的，懒得动笔。</p>
<p>我了个o((⊙﹏⊙))o. 老师连PPT都没发</p>
<h2 id="常见的离散数学符号：联结词：-¬-∧-∨-→-↔推出：⇒等值：⇔△-×-≁量词：∃-∀数学：≠-≥-≤集合关系∪-∩-∈-⊆-⊂-⊇-⊃-O"><a href="#常见的离散数学符号：联结词：-¬-∧-∨-→-↔推出：⇒等值：⇔△-×-≁量词：∃-∀数学：≠-≥-≤集合关系∪-∩-∈-⊆-⊂-⊇-⊃-O" class="headerlink" title="常见的离散数学符号：联结词： ¬ ∧ ∨ → ↔推出：⇒等值：⇔△ × ≁量词：∃ ∀数学：≠ ≥ ≤集合关系∪ ∩ ∈ ⊆ ⊂ ⊇ ⊃ Ø"></a>常见的离散数学符号：<br>联结词： ¬ ∧ ∨ → ↔<br>推出：⇒<br>等值：⇔<br>△ × ≁<br>量词：∃ ∀<br>数学：<br>≠ ≥ ≤<br>集合关系<br>∪ ∩ ∈ ⊆ ⊂ ⊇ ⊃ Ø</h2><h3 id="第1章-命题逻辑的基本概念"><a href="#第1章-命题逻辑的基本概念" class="headerlink" title="第1章 命题逻辑的基本概念"></a>第1章 命题逻辑的基本概念</h3><h4 id="1-1"><a href="#1-1" class="headerlink" title="1.1"></a>1.1</h4><p>命题是非真即假的陈述句,简单命题是最小的基本单位,其构成复合命题,悖论不是命题。</p>
<p>命题符号化，联结词也符号化。<br>¬：否定联结词</p>
<p>∧：合取联结词.规定p∧q为真当且仅当p与q同时为真</p>
<p>∨：析取联结词.规定p∨q为假当且仅当p与q同时为假<br>(或有两种：排斥或 相容或)</p>
<p>→：蕴涵联结词.p→q为假当且仅当p为真q为假。p为前件，q为后件。<br>注意点：<br>1.p→q：表示q是p的必要条件。<br>2.当p为假时，p→q必然为真<br>3.p→q为真仅表示p与q的取值关系为真，与其内在联系无关。</p>
<p>↔：等价联结词.规定p↔q为真当且仅当p与q同时为真或同时为假。</p>
<table>
<thead>
<tr>
<th align="left">p</th>
<th align="left">q</th>
<th align="left">¬p</th>
<th align="left">p∧q</th>
<th align="left">p∨q</th>
<th align="left">p→q</th>
<th align="left">p↔q</th>
</tr>
</thead>
<tbody><tr>
<td align="left">0</td>
<td align="left">0</td>
<td align="left">1</td>
<td align="left">0</td>
<td align="left">0</td>
<td align="left">1</td>
<td align="left">1</td>
</tr>
<tr>
<td align="left">0</td>
<td align="left">1</td>
<td align="left">1</td>
<td align="left">0</td>
<td align="left">1</td>
<td align="left">1</td>
<td align="left">0</td>
</tr>
<tr>
<td align="left">1</td>
<td align="left">0</td>
<td align="left">0</td>
<td align="left">0</td>
<td align="left">1</td>
<td align="left">0</td>
<td align="left">0</td>
</tr>
<tr>
<td align="left">1</td>
<td align="left">1</td>
<td align="left">0</td>
<td align="left">1</td>
<td align="left">1</td>
<td align="left">1</td>
<td align="left">1</td>
</tr>
</tbody></table>
<p>ex：<br>p：北京比天津的人口多<br>q: 2+2&#x3D;4<br>r：乌鸦是白色的<br>求下列符合命题的真值<br>先算简单命题真值：p:1 q:1 r:0<br>(1) ((¬p∧q)∨(p∧¬q))→r   左0右0  A：1<br>(2) (q∨r)→(p→¬r)          左1右1  A：1<br>(3) (¬p∨r)↔(p∧¬r)        左0右1  A：0                           </p>
<h4 id="1-2-命题公式及其赋值"><a href="#1-2-命题公式及其赋值" class="headerlink" title="1.2 命题公式及其赋值"></a>1.2 命题公式及其赋值</h4><p>命题常项真值确定，命题变项是取值1或0的变元。<br>将命题变项用联结词和圆括号按照一定逻辑顺序联结起来的符号串称作合式公式<br>(1)单个命题变项是合式公式，并称为原子命题公式<br>(2)若A为合式公式，则¬A也为合式公式<br>(3)若A,B是合式公式，则 A∧B A∨B A→B A↔B 是合式公式<br>(4)有限次地应用(1)-(3)形成的符号串是合式公式</p>
<p>设A为任一命题公式<br>(1)若A在各种赋值下取值均为真，则称A为重言式或永真式<br>(2)若A在各种赋值下取值均为假，则称A为矛盾式或永假式<br>(3)若A不是矛盾式，则称A为可满式</p>
]]></content>
      <tags>
        <tag>离散数学</tag>
      </tags>
  </entry>
  <entry>
    <title>算法与数据结构</title>
    <url>/2024/08/05/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h5 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h5><p>数组结构：常数复杂度:+ - * &#x2F; 位运算（与数据量无关）<br>链表结构：遍历-&gt;O(n)</p>
<h5 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h5><p>a<em>N^2+b</em>N+c -&gt; O(N^2): 只取最高阶项，且忽略系数 （设上限）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">selectionsort(int[] arr)&#123;</span><br><span class="line">     if(arr == NULL || arr.length&lt;2 ) &#123;return ;&#125;</span><br><span class="line">     for(int i=0; i &lt; arr.length - 1;i++)&#123;</span><br><span class="line">     int minindex =i;</span><br><span class="line">     for(j=i+1;j &lt; arr.length; j++)</span><br><span class="line">     &#123;</span><br><span class="line">        minindex = arr[j] &lt; arr[minindex] ? j : minindex ;</span><br><span class="line">     &#125;</span><br><span class="line">     swap(arr,i,minindex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>


<p>先看时间复杂度指标,时间复杂度一致时,需实际跑代码比较优劣。</p>
<p>额外空间复杂度O(1)</p>
<h5 id="冒泡排序-大的数依次向右移动-O-N-2"><a href="#冒泡排序-大的数依次向右移动-O-N-2" class="headerlink" title="冒泡排序: 大的数依次向右移动 O(N^2)"></a>冒泡排序: 大的数依次向右移动 O(N^2)</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bubblesort(int[] arr)</span><br><span class="line">&#123;</span><br><span class="line">    if(arr == NULL || arr.length &lt; 2) &#123;return;&#125;</span><br><span class="line">    for (int e = arr.lemgth-1 ; e&gt;0 ; e-- )</span><br><span class="line">    &#123;</span><br><span class="line">        for(int i=0; i &lt; e; i++ )</span><br><span class="line">        &#123;</span><br><span class="line">            if(arr[i]&gt;arr[i+1])</span><br><span class="line">                swap(arr,i,i+1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="异或运算：对0-1两个数进行操作；相同为0；不同为1；-或二进制的无进位相加"><a href="#异或运算：对0-1两个数进行操作；相同为0；不同为1；-或二进制的无进位相加" class="headerlink" title="异或运算：对0 1两个数进行操作；相同为0；不同为1； (或二进制的无进位相加)"></a>异或运算：对0 1两个数进行操作；相同为0；不同为1； (或二进制的无进位相加)</h5><ul>
<li>0 ^ N &#x3D; N ;  N ^ N &#x3D; 0</li>
<li>满足交换律和结合律 a^b&#x3D;b^a ; (a^b)^c &#x3D; a^(b^c)</li>
<li>同一组数据，异或结果与顺序无关。</li>
</ul>
<p>Q1：在一个数组中，已知只有一种数出现奇数次，其他数出现偶数次，如何找到？<br>Q2：在一个数组中，已知只有两种数出现奇数次，其他数出现偶数次，如何找到？<br>要求时间复杂度为O(N)<br>A1: int eor&#x3D;0 ; 提取数组的所有数，进行异或：arr[0]^arr[1]^……arr[n]&#x3D;结果<br>A2: 先所有数组进行异或 eor&#x3D;a^b，接着依次取出一个数与该结果异或，得到结果。</p>
<p> 位运算操作(二进制)：一个数取反加1，可以都到最右侧的数。</p>
<h5 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h5><p>0-0有序-&gt;0-1有序-&gt;0-2有序…………<br>4,5,6,7,3,2,1 -&gt; O(N^2)<br>1,2,3,4,5,6,7 -&gt; 0(N)<br>时间复杂度由算法最差情况的表现决定。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insertsort(int[] arr)</span><br><span class="line">&#123;</span><br><span class="line">    if(arr==null || arr.length &lt; 2) &#123;return;&#125;</span><br><span class="line">    for(int i=1; i &lt; arr.length ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        for (int j=i-1;j &gt;= 0 &amp;&amp; arr[j]&gt;arr[j+1]; j-- )</span><br><span class="line">        &#123; swap(arr,j,j+1); &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="二分法的详解与扩展"><a href="#二分法的详解与扩展" class="headerlink" title="二分法的详解与扩展"></a>二分法的详解与扩展</h5><ul>
<li><ol>
<li>在一个有序数组中，找到某个数的存在<br>  (1)遍历 O（N）<br>  (2)二分 O(log2(N))</li>
</ol>
</li>
<li><ol start="2">
<li>在一个有序数组中，找到&gt;&#x3D;某个数最左侧的位置<br>  ex: 1 2 2 2 2 3 3 3 3 4 4 4 4 4 4 4</li>
</ol>
</li>
<li><ol start="3">
<li>局部最小值问题<br>  在一个无序数组中，任何两个相邻的数不相等，求一个局部最小的过程 在时间复杂度上好于O(N)<br>  A：  1 3 5 7 4 9 6 3 2<br>  先看0位置和n-1位置是否存在局部最小，若不，则中间必有局部最小。<br>  接下来继续比较运用二分法。</li>
</ol>
</li>
</ul>
<h5 id="对数器"><a href="#对数器" class="headerlink" title="对数器"></a>对数器</h5><p>优秀方法(想测试的)：考虑时间复杂度，追求优解</p>
<p>普通方法：不考虑时间复杂度，只考虑解决问题</p>
<p>用随机样本产生器，对两种方法运行一遍，结果一样，则说明优秀方法正确。</p>
<h5 id="剖析递归行为及其时间复杂度的估算"><a href="#剖析递归行为及其时间复杂度的估算" class="headerlink" title="剖析递归行为及其时间复杂度的估算"></a>剖析递归行为及其时间复杂度的估算</h5><p>求一个数组的最大值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">process (int[] arr ,int L , int R)</span><br><span class="line">&#123;</span><br><span class="line">    if (L==R)</span><br><span class="line">    &#123;</span><br><span class="line">        return arr[L];</span><br><span class="line">    &#125;</span><br><span class="line">    int mid = L + ((R-L)/2); // 中点，防止内存溢出，高级：mid=L+(R-L)&gt;&gt;1 右移一位相当于除二    </span><br><span class="line">    int leftMax = process (arr,L,mid);</span><br><span class="line">    int rightMax = process (arr,mid+1,R);</span><br><span class="line">    return Math.max(leftMax , rightMax);</span><br><span class="line">&#125; </span><br><span class="line">调用：</span><br><span class="line">getMAX(int[] arr)</span><br><span class="line">&#123;return process(arr,0,arr.length-1);&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>master公式： T(N)&#x3D;a*T(N&#x2F;b)+O(N^d)<br>T(N)：母问题的数据量为N级别 T(N&#x2F;b):子问题的规模都是N&#x2F;b a:子问题的调用次数 O(N^d):除去子问题外剩下过程的时间复杂度</li>
</ul>
<ol>
<li>logb(a)&lt;d -&gt; O(N^d)</li>
<li>logb(a)&gt;d -&gt; O(N^logb(a))</li>
<li>logb(a)&#x3D;&#x3D;d -&gt; O(N^d*logN)</li>
</ol>
<h5 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h5><p>中点切一半，左右各自排好序，最后组合</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">void mergeSort(int[] arr)</span><br><span class="line">&#123;</span><br><span class="line">    if(arr == null || arr.length &lt; 2)</span><br><span class="line">    &#123; return ;&#125;</span><br><span class="line">    process(arr, 0 , arr.length - 1);</span><br><span class="line">&#125;</span><br><span class="line">void process(int[] arr, int L, int R)</span><br><span class="line">&#123;</span><br><span class="line">    if(L==R)&#123;return ;&#125;</span><br><span class="line">    int mid = L + ((R-L)/2);</span><br><span class="line">    process (arr,L,mid);</span><br><span class="line">    process (arr,mid+1,R);</span><br><span class="line">    merge(arr,L,mid,R);</span><br><span class="line">&#125;</span><br><span class="line">void merge(int[] arr, int L ,int M, int R)</span><br><span class="line">&#123;</span><br><span class="line">    int[] help = new int[R-L+1];</span><br><span class="line">    int i=0;int p1=L;int p2 = M+1;</span><br><span class="line">    while (p1&lt;=M &amp;&amp; p2&lt;=R)</span><br><span class="line">    &#123; help[i++]=arr[p1]&lt;=arr[p2]?arr[p1++]:arr[p2++];&#125;</span><br><span class="line">    while (p1&lt;=M) &#123; help[i++]= arr[p2++]; &#125;</span><br><span class="line">    while (p2&lt;=R) &#123; help[i++]= arr[p2++]; &#125;</span><br><span class="line">    for(i=0;i&lt;help.length;i++) &#123; arr[L+i] = help[i]; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>时间复杂度： T(N) &#x3D; 2 * T(N&#x2F;2) + O(N) —&gt;   O(N*logN)<br>额外空间复杂度：O(N)</p>
<ul>
<li>扩展问题：小和问题和逆序对问题</li>
</ul>
<ol>
<li><p>小和问题：在一个数组中，每一个数左边比当前数小的数累加起来，叫做这个数组的小和,求一个数组的小和<br>ex: 1 3 4 2 5  -&gt; 0 + 1 + 1 + 3 + 1 + 1 + 3 + 4 + 2 &#x3D; 16<br>另一种思想： 左边有多少个数比该数大 4<em>1+2</em>3+1<em>4+1</em>2&#x3D;16</p>
</li>
<li><p>逆序对问题：在一个数组中，左边的数如果比右边的数大，则这两个数构成一个逆序对,打印所有的逆序对。</p>
</li>
</ol>
<p> b</p>
]]></content>
      <tags>
        <tag>算法与数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>综测杂谈</title>
    <url>/2024/09/24/%E7%BB%BC%E6%B5%8B%E6%9D%82%E8%B0%88/</url>
    <content><![CDATA[<p>综测83.17，专业排39&#x2F;169</p>
<p>希望评上三等奖学金。</p>
]]></content>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>网易云音乐python爬取</title>
    <url>/2024/10/13/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90python%E7%88%AC%E5%8F%96/</url>
    <content><![CDATA[<p>今天听歌的时候想把网易云要付费的歌曲加入到歌单后，想看看网页上的播放器能不能放，<br>如果这样的话岂不是可以白嫖听音乐了?<br>结果点了后发现不能放,把vip音乐撤销后重新加载一下网页又能放了。<br>然后去csdn上找了一下,发现有个2020年的bug,但现在好像没用了。</p>
<p>说说我对爬虫的理解吧。</p>
<p>之前学过一段时间前端,基本代码都认识,所看见的前端页面里肯定有存放的音乐url(链接网址)。<br>所以我们只要找到这个网址就可以了，俗称抓包。</p>
<span id="more"></span>

<p>先看看网易云音乐页面,不难发现每个歌曲都有自己的id。</p>
<p style="text-align: center;">
    <img src="\images\mu1.png" alt="minecraft">
</p>

<p style="text-align: center;">
    <img src="\images\mu2.png" alt="minecraft">
</p>

<p>这里点击外链播放器，基本就能找到音乐包了。</p>
<p style="text-align: center;">
    <img src="\images\mu3.png" alt="minecraft">
</p>
如下：
<p style="text-align: center;">
    <img src="\images\mu.png" alt="minecraft">
</p>

<p>这里提一下我以前经常用的网站:<br><a href="https://www.myfreemp3.com.cn/">MyfreeMp3</a></p>
<p>现在看来也是爬的网易云音乐，不过好多付费歌曲已经爬不了了</p>
<p style="text-align: center;">
    <img src="\images\mu4.png" alt="minecraft">
</p>

<p>这里先用MyfreeMp3这个网站做个实验,该网站没有做任何加密和反爬虫措施,直接复制粘贴url链接就好<br>结果如下,理论可行,实验成功。</p>
<p style="text-align: center;">
    <img src="\images\mu5.png" alt="minecraft">
</p>

<p>发现csdn好多爬虫代码没用了,去GitHub上找找看吧。</p>
]]></content>
      <tags>
        <tag>网易云</tag>
      </tags>
  </entry>
  <entry>
    <title>关于网站建设的一些想法和遇见的问题</title>
    <url>/2024/08/02/%E7%BE%8E%E5%8C%96%E6%80%9D%E8%B7%AF%E5%92%8C%E6%83%B3%E6%B3%95/</url>
    <content><![CDATA[<h4 id="一些想法"><a href="#一些想法" class="headerlink" title="一些想法"></a>一些想法</h4><p>无数次推翻和重来，下载很多主题包，一个个修改内置参数，乱七八糟的css，js文件看的我头都大了，<br>接下来看能不能设置背景图吧，总感觉有些单调，一些其他功能比如钟表，音乐播放器后续在摸索吧。<br>〒_〒毕竟建站也不容易，与其说这是个技术博客，我更想把自己的一些想法或无聊琐事写下来，<br>或许用来写回忆录也不错。</p>
<p>未来我想实现以下的功能：</p>
<ol>
<li>给我的网页加一个音乐播放器，抄抄代码改改数据，应该不难。</li>
<li>网页背景与轮播图的实现，有点难，完全没思路，可能还要自己改参数手写代码。</li>
<li>网页时钟，算是装饰吧，可有可无，看后面规划吧。</li>
</ol>
<h4 id="关于待解决网页的访问问题"><a href="#关于待解决网页的访问问题" class="headerlink" title="关于待解决网页的访问问题"></a>关于待解决网页的访问问题</h4><ol>
<li>是hexo本地部署到github后部分css样式不显示，甚至不加载。<br>我不知道怎么办，以后解决了一定记录下来。</li>
<li>pc端和移动端看见的网页样式不一样！∑(O_O；) 简直令人费解，明明hexo clean &amp;&amp; g &amp;&amp; d了，理论上来自一个代码仓库怎么可能不一样呢???</li>
<li>由于Github是国外的，国内有点地方访问不了，加载速度也很慢。考虑到部署到gitee上，结果那个gitee pages功能到现在都没修好，我的评价是gitee就是个垃圾</li>
<li>目前只是静态网页，一切都已经预加载好了，未来考虑一下买个域名和服务器，学一下后端看看怎么回事吧。不过现在我连冰淇淋都很少买了，还得暑假打工挣点。</li>
</ol>
<p>另外：<br>感觉markdown用熟了是真的好！(◍•ᴗ•◍)♡♬</p>
<h2 id="好的，目前就更新到这边吧。"><a href="#好的，目前就更新到这边吧。" class="headerlink" title="好的，目前就更新到这边吧。"></a>好的，目前就更新到这边吧。</h2>]]></content>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>闲聊</title>
    <url>/2024/08/12/%E9%97%B2%E8%81%8A/</url>
    <content><![CDATA[<p>三天没写blog了，本来放暑假也比较闲，也不想学习。最近在玩我的世界，搭建筑。记录一下。<br><strong>天空，即为极限！</strong></p>
<p style="text-align: center;">
    <img src="\images\我的世界1.png" alt="minecraft">
</p>]]></content>
      <tags>
        <tag>闲聊</tag>
      </tags>
  </entry>
</search>
